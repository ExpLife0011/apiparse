from apiutil import *
from d3d11wrapgen import *
ctx = APIContext()
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "                /* [in] */", "const IID &", "riid")
PARAM(ctx, "                /* [iid_is][out] */ _COM_Outptr_", "void **", "ppvObject")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
CLASS_END(ctx, "IUnknown")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIObject")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "Name")
PARAM(ctx, "            /* [in] */", "UINT", "DataSize")
PARAM(ctx, "            _In_reads_bytes_(DataSize) ", "const void *", "pData")
FUNC_END(ctx, "SetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateDataInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "Name")
PARAM(ctx, "            _In_opt_ ", "const struct IUnknown *", "pUnknown")
FUNC_END(ctx, "SetPrivateDataInterface")
FUNC_BEGIN(ctx, "GetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "Name")
PARAM(ctx, "            _Inout_ ", "UINT *", "pDataSize")
PARAM(ctx, "            _Out_writes_bytes_(*pDataSize) ", "void *", "pData")
FUNC_END(ctx, "GetPrivateData")
FUNC_BEGIN(ctx, "GetParent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppParent")
FUNC_END(ctx, "GetParent")
CLASS_END(ctx, "IDXGIObject")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDeviceSubObject")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "GetDevice")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppDevice")
FUNC_END(ctx, "GetDevice")
CLASS_END(ctx, "IDXGIDeviceSubObject")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIResource")
INHERITS(ctx, "IDXGIDeviceSubObject")
FUNC_BEGIN(ctx, "GetSharedHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pSharedHandle")
FUNC_END(ctx, "GetSharedHandle")
FUNC_BEGIN(ctx, "GetUsage")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [out] */", "DXGI_USAGE *", "pUsage")
FUNC_END(ctx, "GetUsage")
FUNC_BEGIN(ctx, "SetEvictionPriority")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "EvictionPriority")
FUNC_END(ctx, "SetEvictionPriority")
FUNC_BEGIN(ctx, "GetEvictionPriority")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pEvictionPriority")
FUNC_END(ctx, "GetEvictionPriority")
CLASS_END(ctx, "IDXGIResource")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIKeyedMutex")
INHERITS(ctx, "IDXGIDeviceSubObject")
FUNC_BEGIN(ctx, "AcquireSync")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT64", "Key")
PARAM(ctx, "            /* [in] */", "DWORD", "dwMilliseconds")
FUNC_END(ctx, "AcquireSync")
FUNC_BEGIN(ctx, "ReleaseSync")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT64", "Key")
FUNC_END(ctx, "ReleaseSync")
CLASS_END(ctx, "IDXGIKeyedMutex")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISurface")
INHERITS(ctx, "IDXGIDeviceSubObject")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_SURFACE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "Map")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_MAPPED_RECT *", "pLockedRect")
PARAM(ctx, "            /* [in] */", "UINT", "MapFlags")
FUNC_END(ctx, "Map")
FUNC_BEGIN(ctx, "Unmap")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "Unmap")
CLASS_END(ctx, "IDXGISurface")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISurface1")
INHERITS(ctx, "IDXGISurface")
FUNC_BEGIN(ctx, "GetDC")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "BOOL", "Discard")
PARAM(ctx, "            _Out_ ", "HDC *", "phdc")
FUNC_END(ctx, "GetDC")
FUNC_BEGIN(ctx, "ReleaseDC")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_opt_ ", "RECT *", "pDirtyRect")
FUNC_END(ctx, "ReleaseDC")
CLASS_END(ctx, "IDXGISurface1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIAdapter")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "EnumOutputs")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "Output")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIOutput **", "ppOutput")
FUNC_END(ctx, "EnumOutputs")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_ADAPTER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "CheckInterfaceSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "InterfaceName")
PARAM(ctx, "            _Out_ ", "LARGE_INTEGER *", "pUMDVersion")
FUNC_END(ctx, "CheckInterfaceSupport")
CLASS_END(ctx, "IDXGIAdapter")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_OUTPUT_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetDisplayModeList")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "DXGI_FORMAT", "EnumFormat")
PARAM(ctx, "            /* [in] */", "UINT", "Flags")
PARAM(ctx, "            _Inout_ ", "UINT *", "pNumModes")
PARAM(ctx, "*pNumModes) ", "DXGI_MODE_DESC *", "pDesc")
FUNC_END(ctx, "GetDisplayModeList")
FUNC_BEGIN(ctx, "FindClosestMatchingMode")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_MODE_DESC *", "pModeToMatch")
PARAM(ctx, "            _Out_ ", "DXGI_MODE_DESC *", "pClosestMatch")
PARAM(ctx, "            _In_opt_ ", "struct IUnknown *", "pConcernedDevice")
FUNC_END(ctx, "FindClosestMatchingMode")
FUNC_BEGIN(ctx, "WaitForVBlank")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "WaitForVBlank")
FUNC_BEGIN(ctx, "TakeOwnership")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "           ", "BOOL", "Exclusive")
FUNC_END(ctx, "TakeOwnership")
FUNC_BEGIN(ctx, "ReleaseOwnership")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "ReleaseOwnership")
FUNC_BEGIN(ctx, "GetGammaControlCapabilities")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_GAMMA_CONTROL_CAPABILITIES *", "pGammaCaps")
FUNC_END(ctx, "GetGammaControlCapabilities")
FUNC_BEGIN(ctx, "SetGammaControl")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_GAMMA_CONTROL *", "pArray")
FUNC_END(ctx, "SetGammaControl")
FUNC_BEGIN(ctx, "GetGammaControl")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_GAMMA_CONTROL *", "pArray")
FUNC_END(ctx, "GetGammaControl")
FUNC_BEGIN(ctx, "SetDisplaySurface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "IDXGISurface *", "pScanoutSurface")
FUNC_END(ctx, "SetDisplaySurface")
FUNC_BEGIN(ctx, "GetDisplaySurfaceData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "IDXGISurface *", "pDestination")
FUNC_END(ctx, "GetDisplaySurfaceData")
FUNC_BEGIN(ctx, "GetFrameStatistics")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_FRAME_STATISTICS *", "pStats")
FUNC_END(ctx, "GetFrameStatistics")
CLASS_END(ctx, "IDXGIOutput")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChain")
INHERITS(ctx, "IDXGIDeviceSubObject")
FUNC_BEGIN(ctx, "Present")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "SyncInterval")
PARAM(ctx, "            /* [in] */", "UINT", "Flags")
FUNC_END(ctx, "Present")
FUNC_BEGIN(ctx, "GetBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "Buffer")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppSurface")
FUNC_END(ctx, "GetBuffer")
FUNC_BEGIN(ctx, "SetFullscreenState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "BOOL", "Fullscreen")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pTarget")
FUNC_END(ctx, "SetFullscreenState")
FUNC_BEGIN(ctx, "GetFullscreenState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_opt_ ", "BOOL *", "pFullscreen")
PARAM(ctx, "            _COM_Outptr_opt_result_maybenull_ ", "IDXGIOutput **", "ppTarget")
FUNC_END(ctx, "GetFullscreenState")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_SWAP_CHAIN_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "ResizeBuffers")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "BufferCount")
PARAM(ctx, "            /* [in] */", "UINT", "Width")
PARAM(ctx, "            /* [in] */", "UINT", "Height")
PARAM(ctx, "            /* [in] */", "DXGI_FORMAT", "NewFormat")
PARAM(ctx, "            /* [in] */", "UINT", "SwapChainFlags")
FUNC_END(ctx, "ResizeBuffers")
FUNC_BEGIN(ctx, "ResizeTarget")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_MODE_DESC *", "pNewTargetParameters")
FUNC_END(ctx, "ResizeTarget")
FUNC_BEGIN(ctx, "GetContainingOutput")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIOutput **", "ppOutput")
FUNC_END(ctx, "GetContainingOutput")
FUNC_BEGIN(ctx, "GetFrameStatistics")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_FRAME_STATISTICS *", "pStats")
FUNC_END(ctx, "GetFrameStatistics")
FUNC_BEGIN(ctx, "GetLastPresentCount")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pLastPresentCount")
FUNC_END(ctx, "GetLastPresentCount")
CLASS_END(ctx, "IDXGISwapChain")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "EnumAdapters")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "Adapter")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIAdapter **", "ppAdapter")
FUNC_END(ctx, "EnumAdapters")
FUNC_BEGIN(ctx, "MakeWindowAssociation")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "HWND", "WindowHandle")
PARAM(ctx, "           ", "UINT", "Flags")
FUNC_END(ctx, "MakeWindowAssociation")
FUNC_BEGIN(ctx, "GetWindowAssociation")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "HWND *", "pWindowHandle")
FUNC_END(ctx, "GetWindowAssociation")
FUNC_BEGIN(ctx, "CreateSwapChain")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_ ", "DXGI_SWAP_CHAIN_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISwapChain **", "ppSwapChain")
FUNC_END(ctx, "CreateSwapChain")
FUNC_BEGIN(ctx, "CreateSoftwareAdapter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "HMODULE", "Module")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIAdapter **", "ppAdapter")
FUNC_END(ctx, "CreateSoftwareAdapter")
CLASS_END(ctx, "IDXGIFactory")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "CreateDXGIFactory")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "HRESULT WINAPI CreateDXGIFactory", "const IID &", "riid")
PARAM(ctx, " _COM_Outptr_", "void **", "ppFactory")
FUNC_END(ctx, "CreateDXGIFactory")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "CreateDXGIFactory1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "HRESULT WINAPI CreateDXGIFactory1", "const IID &", "riid")
PARAM(ctx, " _COM_Outptr_", "void **", "ppFactory")
FUNC_END(ctx, "CreateDXGIFactory1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDevice")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "GetAdapter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIAdapter **", "pAdapter")
FUNC_END(ctx, "GetAdapter")
FUNC_BEGIN(ctx, "CreateSurface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_SURFACE_DESC *", "pDesc")
PARAM(ctx, "            /* [in] */", "UINT", "NumSurfaces")
PARAM(ctx, "            /* [in] */", "DXGI_USAGE", "Usage")
PARAM(ctx, "            _In_opt_ ", "const DXGI_SHARED_RESOURCE *", "pSharedResource")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISurface **", "ppSurface")
FUNC_END(ctx, "CreateSurface")
FUNC_BEGIN(ctx, "QueryResourceResidency")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(NumResources) ", "struct IUnknown *const *", "ppResources")
PARAM(ctx, "            _Out_writes_(NumResources) ", "DXGI_RESIDENCY *", "pResidencyStatus")
PARAM(ctx, "            /* [in] */", "UINT", "NumResources")
FUNC_END(ctx, "QueryResourceResidency")
FUNC_BEGIN(ctx, "SetGPUThreadPriority")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "INT", "Priority")
FUNC_END(ctx, "SetGPUThreadPriority")
FUNC_BEGIN(ctx, "GetGPUThreadPriority")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "INT *", "pPriority")
FUNC_END(ctx, "GetGPUThreadPriority")
CLASS_END(ctx, "IDXGIDevice")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory1")
INHERITS(ctx, "IDXGIFactory")
FUNC_BEGIN(ctx, "EnumAdapters1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "Adapter")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIAdapter1 **", "ppAdapter")
FUNC_END(ctx, "EnumAdapters1")
FUNC_BEGIN(ctx, "IsCurrent")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsCurrent")
CLASS_END(ctx, "IDXGIFactory1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIAdapter1")
INHERITS(ctx, "IDXGIAdapter")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_ADAPTER_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "IDXGIAdapter1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDevice1")
INHERITS(ctx, "IDXGIDevice")
FUNC_BEGIN(ctx, "SetMaximumFrameLatency")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "MaxLatency")
FUNC_END(ctx, "SetMaximumFrameLatency")
FUNC_BEGIN(ctx, "GetMaximumFrameLatency")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pMaxLatency")
FUNC_END(ctx, "GetMaximumFrameLatency")
CLASS_END(ctx, "IDXGIDevice1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D10Blob")
INHERITS(ctx, "IUnknown")
CLASS_END(ctx, "ID3D10Blob")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D10Blob")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "GetBufferPointer")
RETURN_TYPE(ctx, "LPVOID")
FUNC_END(ctx, "GetBufferPointer")
FUNC_BEGIN(ctx, "GetBufferSize")
RETURN_TYPE(ctx, "SIZE_T")
FUNC_END(ctx, "GetBufferSize")
CLASS_END(ctx, "ID3D10Blob")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3DDestructionNotifier")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "RegisterDestructionCallback")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "PFN_DESTRUCTION_CALLBACK", "callbackFn")
PARAM(ctx, "            _In_ ", "void *", "pData")
PARAM(ctx, "            _Out_ ", "UINT *", "pCallbackID")
FUNC_END(ctx, "RegisterDestructionCallback")
FUNC_BEGIN(ctx, "UnregisterDestructionCallback")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "callbackID")
FUNC_END(ctx, "UnregisterDestructionCallback")
CLASS_END(ctx, "ID3DDestructionNotifier")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3DInclude")
FUNC_BEGIN(ctx, "Open")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(Open)(THIS_", "D3D_INCLUDE_TYPE", "IncludeType")
PARAM(ctx, "", "LPCSTR", "pFileName")
PARAM(ctx, "", "LPCVOID", "pParentData")
PARAM(ctx, "", "LPCVOID *", "ppData")
PARAM(ctx, "", "UINT *", "pBytes")
FUNC_END(ctx, "Open")
FUNC_BEGIN(ctx, "Close")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(Close)(THIS_", "LPCVOID", "pData")
FUNC_END(ctx, "Close")
CLASS_END(ctx, "ID3DInclude")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceChild")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "GetDevice")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11Device **", "ppDevice")
FUNC_END(ctx, "GetDevice")
FUNC_BEGIN(ctx, "GetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _Inout_ ", "UINT *", "pDataSize")
PARAM(ctx, "            _Out_writes_bytes_opt_( *pDataSize ) ", "void *", "pData")
FUNC_END(ctx, "GetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_reads_bytes_opt_( DataSize ) ", "const void *", "pData")
FUNC_END(ctx, "SetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateDataInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_opt_ ", "const struct IUnknown *", "pData")
FUNC_END(ctx, "SetPrivateDataInterface")
CLASS_END(ctx, "ID3D11DeviceChild")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DepthStencilState")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_DEPTH_STENCIL_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11DepthStencilState")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11BlendState")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_BLEND_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11BlendState")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RasterizerState")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RASTERIZER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11RasterizerState")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3D11CalcSubresource")
RETURN_TYPE(ctx, "UINT")
PARAM(ctx, "inline UINT D3D11CalcSubresource(", "UINT", "MipSlice")
PARAM(ctx, "", "UINT", "ArraySlice")
PARAM(ctx, "", "UINT", "MipLevels")
FUNC_END(ctx, "D3D11CalcSubresource")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Resource")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetType")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RESOURCE_DIMENSION *", "pResourceDimension")
FUNC_END(ctx, "GetType")
FUNC_BEGIN(ctx, "SetEvictionPriority")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "EvictionPriority")
FUNC_END(ctx, "SetEvictionPriority")
FUNC_BEGIN(ctx, "GetEvictionPriority")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetEvictionPriority")
CLASS_END(ctx, "ID3D11Resource")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Buffer")
INHERITS(ctx, "ID3D11Resource")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_BUFFER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Buffer")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Texture1D")
INHERITS(ctx, "ID3D11Resource")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_TEXTURE1D_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Texture1D")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Texture2D")
INHERITS(ctx, "ID3D11Resource")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_TEXTURE2D_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Texture2D")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Texture3D")
INHERITS(ctx, "ID3D11Resource")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_TEXTURE3D_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Texture3D")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11View")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetResource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11Resource **", "ppResource")
FUNC_END(ctx, "GetResource")
CLASS_END(ctx, "ID3D11View")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderResourceView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_SHADER_RESOURCE_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11ShaderResourceView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RenderTargetView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RENDER_TARGET_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11RenderTargetView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DepthStencilView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_DEPTH_STENCIL_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11DepthStencilView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11UnorderedAccessView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_UNORDERED_ACCESS_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11UnorderedAccessView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VertexShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11VertexShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11HullShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11HullShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DomainShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11DomainShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11GeometryShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11GeometryShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11PixelShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11PixelShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ComputeShader")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11ComputeShader")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11InputLayout")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3D11InputLayout")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11SamplerState")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_SAMPLER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11SamplerState")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Asynchronous")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDataSize")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetDataSize")
CLASS_END(ctx, "ID3D11Asynchronous")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Query")
INHERITS(ctx, "ID3D11Asynchronous")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_QUERY_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Query")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Predicate")
INHERITS(ctx, "ID3D11Query")
CLASS_END(ctx, "ID3D11Predicate")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Counter")
INHERITS(ctx, "ID3D11Asynchronous")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_COUNTER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11Counter")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ClassInstance")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetClassLinkage")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11ClassLinkage **", "ppLinkage")
FUNC_END(ctx, "GetClassLinkage")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_CLASS_INSTANCE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetInstanceName")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_writes_opt_(*pBufferLength) ", "LPSTR", "pInstanceName")
PARAM(ctx, "            _Inout_ ", "SIZE_T *", "pBufferLength")
FUNC_END(ctx, "GetInstanceName")
FUNC_BEGIN(ctx, "GetTypeName")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_writes_opt_(*pBufferLength) ", "LPSTR", "pTypeName")
PARAM(ctx, "            _Inout_ ", "SIZE_T *", "pBufferLength")
FUNC_END(ctx, "GetTypeName")
CLASS_END(ctx, "ID3D11ClassInstance")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ClassLinkage")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetClassInstance")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "LPCSTR", "pClassInstanceName")
PARAM(ctx, "            _In_ ", "UINT", "InstanceIndex")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11ClassInstance **", "ppInstance")
FUNC_END(ctx, "GetClassInstance")
FUNC_BEGIN(ctx, "CreateClassInstance")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "LPCSTR", "pClassTypeName")
PARAM(ctx, "            _In_ ", "UINT", "ConstantBufferOffset")
PARAM(ctx, "            _In_ ", "UINT", "ConstantVectorOffset")
PARAM(ctx, "            _In_ ", "UINT", "TextureOffset")
PARAM(ctx, "            _In_ ", "UINT", "SamplerOffset")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11ClassInstance **", "ppInstance")
FUNC_END(ctx, "CreateClassInstance")
CLASS_END(ctx, "ID3D11ClassLinkage")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11CommandList")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetContextFlags")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetContextFlags")
CLASS_END(ctx, "ID3D11CommandList")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceContext")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "VSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "VSSetConstantBuffers")
FUNC_BEGIN(ctx, "PSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "PSSetShaderResources")
FUNC_BEGIN(ctx, "PSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11PixelShader *", "pPixelShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "PSSetShader")
FUNC_BEGIN(ctx, "PSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "PSSetSamplers")
FUNC_BEGIN(ctx, "VSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11VertexShader *", "pVertexShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "VSSetShader")
FUNC_BEGIN(ctx, "DrawIndexed")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "IndexCount")
PARAM(ctx, "            _In_ ", "UINT", "StartIndexLocation")
PARAM(ctx, "            _In_ ", "INT", "BaseVertexLocation")
FUNC_END(ctx, "DrawIndexed")
FUNC_BEGIN(ctx, "Draw")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "VertexCount")
PARAM(ctx, "            _In_ ", "UINT", "StartVertexLocation")
FUNC_END(ctx, "Draw")
FUNC_BEGIN(ctx, "Map")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_ ", "UINT", "Subresource")
PARAM(ctx, "            _In_ ", "D3D11_MAP", "MapType")
PARAM(ctx, "            _In_ ", "UINT", "MapFlags")
PARAM(ctx, "            _Out_opt_ ", "D3D11_MAPPED_SUBRESOURCE *", "pMappedResource")
FUNC_END(ctx, "Map")
FUNC_BEGIN(ctx, "Unmap")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_ ", "UINT", "Subresource")
FUNC_END(ctx, "Unmap")
FUNC_BEGIN(ctx, "PSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "PSSetConstantBuffers")
FUNC_BEGIN(ctx, "IASetInputLayout")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11InputLayout *", "pInputLayout")
FUNC_END(ctx, "IASetInputLayout")
FUNC_BEGIN(ctx, "IASetVertexBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppVertexBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pStrides")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pOffsets")
FUNC_END(ctx, "IASetVertexBuffers")
FUNC_BEGIN(ctx, "IASetIndexBuffer")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11Buffer *", "pIndexBuffer")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "UINT", "Offset")
FUNC_END(ctx, "IASetIndexBuffer")
FUNC_BEGIN(ctx, "DrawIndexedInstanced")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "IndexCountPerInstance")
PARAM(ctx, "            _In_ ", "UINT", "InstanceCount")
PARAM(ctx, "            _In_ ", "UINT", "StartIndexLocation")
PARAM(ctx, "            _In_ ", "INT", "BaseVertexLocation")
PARAM(ctx, "            _In_ ", "UINT", "StartInstanceLocation")
FUNC_END(ctx, "DrawIndexedInstanced")
FUNC_BEGIN(ctx, "DrawInstanced")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "VertexCountPerInstance")
PARAM(ctx, "            _In_ ", "UINT", "InstanceCount")
PARAM(ctx, "            _In_ ", "UINT", "StartVertexLocation")
PARAM(ctx, "            _In_ ", "UINT", "StartInstanceLocation")
FUNC_END(ctx, "DrawInstanced")
FUNC_BEGIN(ctx, "GSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "GSSetConstantBuffers")
FUNC_BEGIN(ctx, "GSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11GeometryShader *", "pShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "GSSetShader")
FUNC_BEGIN(ctx, "IASetPrimitiveTopology")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "D3D11_PRIMITIVE_TOPOLOGY", "Topology")
FUNC_END(ctx, "IASetPrimitiveTopology")
FUNC_BEGIN(ctx, "VSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "VSSetShaderResources")
FUNC_BEGIN(ctx, "VSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "VSSetSamplers")
FUNC_BEGIN(ctx, "Begin")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Asynchronous *", "pAsync")
FUNC_END(ctx, "Begin")
FUNC_BEGIN(ctx, "End")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Asynchronous *", "pAsync")
FUNC_END(ctx, "End")
FUNC_BEGIN(ctx, "GetData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Asynchronous *", "pAsync")
PARAM(ctx, "            _Out_writes_bytes_opt_( DataSize ) ", "void *", "pData")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_ ", "UINT", "GetDataFlags")
FUNC_END(ctx, "GetData")
FUNC_BEGIN(ctx, "SetPredication")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11Predicate *", "pPredicate")
PARAM(ctx, "            _In_ ", "BOOL", "PredicateValue")
FUNC_END(ctx, "SetPredication")
FUNC_BEGIN(ctx, "GSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "GSSetShaderResources")
FUNC_BEGIN(ctx, "GSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "GSSetSamplers")
FUNC_BEGIN(ctx, "OMSetRenderTargets")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11RenderTargetView *const *", "ppRenderTargetViews")
PARAM(ctx, "            _In_opt_ ", "ID3D11DepthStencilView *", "pDepthStencilView")
FUNC_END(ctx, "OMSetRenderTargets")
FUNC_BEGIN(ctx, "OMSetRenderTargetsAndUnorderedAccessViews")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "NumRTVs")
PARAM(ctx, "            _In_reads_opt_(NumRTVs) ", "ID3D11RenderTargetView *const *", "ppRenderTargetViews")
PARAM(ctx, "            _In_opt_ ", "ID3D11DepthStencilView *", "pDepthStencilView")
PARAM(ctx, " D3D11_1_UAV_SLOT_COUNT - 1 ) ", "UINT", "UAVStartSlot")
PARAM(ctx, "            _In_ ", "UINT", "NumUAVs")
PARAM(ctx, "            _In_reads_opt_(NumUAVs) ", "ID3D11UnorderedAccessView *const *", "ppUnorderedAccessViews")
PARAM(ctx, "            _In_reads_opt_(NumUAVs) ", "const UINT *", "pUAVInitialCounts")
FUNC_END(ctx, "OMSetRenderTargetsAndUnorderedAccessViews")
FUNC_BEGIN(ctx, "OMSetBlendState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11BlendState *", "pBlendState")
PARAM(ctx, "            _In_opt_ ", "const FLOAT *", "BlendFactor")
PARAM(ctx, "            _In_ ", "UINT", "SampleMask")
FUNC_END(ctx, "OMSetBlendState")
FUNC_BEGIN(ctx, "OMSetDepthStencilState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11DepthStencilState *", "pDepthStencilState")
PARAM(ctx, "            _In_ ", "UINT", "StencilRef")
FUNC_END(ctx, "OMSetDepthStencilState")
FUNC_BEGIN(ctx, "SOSetTargets")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_SO_BUFFER_SLOT_COUNT) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppSOTargets")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pOffsets")
FUNC_END(ctx, "SOSetTargets")
FUNC_BEGIN(ctx, "DrawAuto")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "DrawAuto")
FUNC_BEGIN(ctx, "DrawIndexedInstancedIndirect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pBufferForArgs")
PARAM(ctx, "            _In_ ", "UINT", "AlignedByteOffsetForArgs")
FUNC_END(ctx, "DrawIndexedInstancedIndirect")
FUNC_BEGIN(ctx, "DrawInstancedIndirect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pBufferForArgs")
PARAM(ctx, "            _In_ ", "UINT", "AlignedByteOffsetForArgs")
FUNC_END(ctx, "DrawInstancedIndirect")
FUNC_BEGIN(ctx, "Dispatch")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "UINT", "ThreadGroupCountX")
PARAM(ctx, "            _In_ ", "UINT", "ThreadGroupCountY")
PARAM(ctx, "            _In_ ", "UINT", "ThreadGroupCountZ")
FUNC_END(ctx, "Dispatch")
FUNC_BEGIN(ctx, "DispatchIndirect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pBufferForArgs")
PARAM(ctx, "            _In_ ", "UINT", "AlignedByteOffsetForArgs")
FUNC_END(ctx, "DispatchIndirect")
FUNC_BEGIN(ctx, "RSSetState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11RasterizerState *", "pRasterizerState")
FUNC_END(ctx, "RSSetState")
FUNC_BEGIN(ctx, "RSSetViewports")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) ", "UINT", "NumViewports")
PARAM(ctx, "            _In_reads_opt_(NumViewports) ", "const D3D11_VIEWPORT *", "pViewports")
FUNC_END(ctx, "RSSetViewports")
FUNC_BEGIN(ctx, "RSSetScissorRects")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) ", "UINT", "NumRects")
PARAM(ctx, "            _In_reads_opt_(NumRects) ", "const D3D11_RECT *", "pRects")
FUNC_END(ctx, "RSSetScissorRects")
FUNC_BEGIN(ctx, "CopySubresourceRegion")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_ ", "UINT", "DstX")
PARAM(ctx, "            _In_ ", "UINT", "DstY")
PARAM(ctx, "            _In_ ", "UINT", "DstZ")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSrcResource")
PARAM(ctx, "            _In_ ", "UINT", "SrcSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pSrcBox")
FUNC_END(ctx, "CopySubresourceRegion")
FUNC_BEGIN(ctx, "CopyResource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSrcResource")
FUNC_END(ctx, "CopyResource")
FUNC_BEGIN(ctx, "UpdateSubresource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pDstBox")
PARAM(ctx, "            _In_ ", "const void *", "pSrcData")
PARAM(ctx, "            _In_ ", "UINT", "SrcRowPitch")
PARAM(ctx, "            _In_ ", "UINT", "SrcDepthPitch")
FUNC_END(ctx, "UpdateSubresource")
FUNC_BEGIN(ctx, "CopyStructureCount")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pDstBuffer")
PARAM(ctx, "            _In_ ", "UINT", "DstAlignedByteOffset")
PARAM(ctx, "            _In_ ", "ID3D11UnorderedAccessView *", "pSrcView")
FUNC_END(ctx, "CopyStructureCount")
FUNC_BEGIN(ctx, "ClearRenderTargetView")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11RenderTargetView *", "pRenderTargetView")
PARAM(ctx, "            _In_ ", "const FLOAT *", "ColorRGBA")
FUNC_END(ctx, "ClearRenderTargetView")
FUNC_BEGIN(ctx, "ClearUnorderedAccessViewUint")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11UnorderedAccessView *", "pUnorderedAccessView")
PARAM(ctx, "            _In_ ", "const UINT *", "Values")
FUNC_END(ctx, "ClearUnorderedAccessViewUint")
FUNC_BEGIN(ctx, "ClearUnorderedAccessViewFloat")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11UnorderedAccessView *", "pUnorderedAccessView")
PARAM(ctx, "            _In_ ", "const FLOAT *", "Values")
FUNC_END(ctx, "ClearUnorderedAccessViewFloat")
FUNC_BEGIN(ctx, "ClearDepthStencilView")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11DepthStencilView *", "pDepthStencilView")
PARAM(ctx, "            _In_ ", "UINT", "ClearFlags")
PARAM(ctx, "            _In_ ", "FLOAT", "Depth")
PARAM(ctx, "            _In_ ", "UINT8", "Stencil")
FUNC_END(ctx, "ClearDepthStencilView")
FUNC_BEGIN(ctx, "GenerateMips")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11ShaderResourceView *", "pShaderResourceView")
FUNC_END(ctx, "GenerateMips")
FUNC_BEGIN(ctx, "SetResourceMinLOD")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "           ", "FLOAT", "MinLOD")
FUNC_END(ctx, "SetResourceMinLOD")
FUNC_BEGIN(ctx, "GetResourceMinLOD")
RETURN_TYPE(ctx, "FLOAT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
FUNC_END(ctx, "GetResourceMinLOD")
FUNC_BEGIN(ctx, "ResolveSubresource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSrcResource")
PARAM(ctx, "            _In_ ", "UINT", "SrcSubresource")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
FUNC_END(ctx, "ResolveSubresource")
FUNC_BEGIN(ctx, "ExecuteCommandList")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11CommandList *", "pCommandList")
PARAM(ctx, "           ", "BOOL", "RestoreContextState")
FUNC_END(ctx, "ExecuteCommandList")
FUNC_BEGIN(ctx, "HSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "HSSetShaderResources")
FUNC_BEGIN(ctx, "HSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11HullShader *", "pHullShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "HSSetShader")
FUNC_BEGIN(ctx, "HSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "HSSetSamplers")
FUNC_BEGIN(ctx, "HSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "HSSetConstantBuffers")
FUNC_BEGIN(ctx, "DSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "DSSetShaderResources")
FUNC_BEGIN(ctx, "DSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11DomainShader *", "pDomainShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "DSSetShader")
FUNC_BEGIN(ctx, "DSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "DSSetSamplers")
FUNC_BEGIN(ctx, "DSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "DSSetConstantBuffers")
FUNC_BEGIN(ctx, "CSSetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _In_reads_opt_(NumViews) ", "ID3D11ShaderResourceView *const *", "ppShaderResourceViews")
FUNC_END(ctx, "CSSetShaderResources")
FUNC_BEGIN(ctx, "CSSetUnorderedAccessViews")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_1_UAV_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_1_UAV_SLOT_COUNT - StartSlot ) ", "UINT", "NumUAVs")
PARAM(ctx, "            _In_reads_opt_(NumUAVs) ", "ID3D11UnorderedAccessView *const *", "ppUnorderedAccessViews")
PARAM(ctx, "            _In_reads_opt_(NumUAVs) ", "const UINT *", "pUAVInitialCounts")
FUNC_END(ctx, "CSSetUnorderedAccessViews")
FUNC_BEGIN(ctx, "CSSetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "ID3D11ComputeShader *", "pComputeShader")
PARAM(ctx, "            _In_reads_opt_(NumClassInstances) ", "ID3D11ClassInstance *const *", "ppClassInstances")
PARAM(ctx, "           ", "UINT", "NumClassInstances")
FUNC_END(ctx, "CSSetShader")
FUNC_BEGIN(ctx, "CSSetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _In_reads_opt_(NumSamplers) ", "ID3D11SamplerState *const *", "ppSamplers")
FUNC_END(ctx, "CSSetSamplers")
FUNC_BEGIN(ctx, "CSSetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
FUNC_END(ctx, "CSSetConstantBuffers")
FUNC_BEGIN(ctx, "VSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "VSGetConstantBuffers")
FUNC_BEGIN(ctx, "PSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "PSGetShaderResources")
FUNC_BEGIN(ctx, "PSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11PixelShader **", "ppPixelShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "PSGetShader")
FUNC_BEGIN(ctx, "PSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "PSGetSamplers")
FUNC_BEGIN(ctx, "VSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11VertexShader **", "ppVertexShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "VSGetShader")
FUNC_BEGIN(ctx, "PSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "PSGetConstantBuffers")
FUNC_BEGIN(ctx, "IAGetInputLayout")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11InputLayout **", "ppInputLayout")
FUNC_END(ctx, "IAGetInputLayout")
FUNC_BEGIN(ctx, "IAGetVertexBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppVertexBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pStrides")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pOffsets")
FUNC_END(ctx, "IAGetVertexBuffers")
FUNC_BEGIN(ctx, "IAGetIndexBuffer")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11Buffer **", "pIndexBuffer")
PARAM(ctx, "            _Out_opt_ ", "DXGI_FORMAT *", "Format")
PARAM(ctx, "            _Out_opt_ ", "UINT *", "Offset")
FUNC_END(ctx, "IAGetIndexBuffer")
FUNC_BEGIN(ctx, "GSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "GSGetConstantBuffers")
FUNC_BEGIN(ctx, "GSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11GeometryShader **", "ppGeometryShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "GSGetShader")
FUNC_BEGIN(ctx, "IAGetPrimitiveTopology")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_PRIMITIVE_TOPOLOGY *", "pTopology")
FUNC_END(ctx, "IAGetPrimitiveTopology")
FUNC_BEGIN(ctx, "VSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "VSGetShaderResources")
FUNC_BEGIN(ctx, "VSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "VSGetSamplers")
FUNC_BEGIN(ctx, "GetPredication")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11Predicate **", "ppPredicate")
PARAM(ctx, "            _Out_opt_ ", "BOOL *", "pPredicateValue")
FUNC_END(ctx, "GetPredication")
FUNC_BEGIN(ctx, "GSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "GSGetShaderResources")
FUNC_BEGIN(ctx, "GSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "GSGetSamplers")
FUNC_BEGIN(ctx, "OMGetRenderTargets")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11RenderTargetView **", "ppRenderTargetViews")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11DepthStencilView **", "ppDepthStencilView")
FUNC_END(ctx, "OMGetRenderTargets")
FUNC_BEGIN(ctx, "OMGetRenderTargetsAndUnorderedAccessViews")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT ) ", "UINT", "NumRTVs")
PARAM(ctx, "            _Out_writes_opt_(NumRTVs) ", "ID3D11RenderTargetView **", "ppRenderTargetViews")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11DepthStencilView **", "ppDepthStencilView")
PARAM(ctx, " D3D11_PS_CS_UAV_REGISTER_COUNT - 1 ) ", "UINT", "UAVStartSlot")
PARAM(ctx, " D3D11_PS_CS_UAV_REGISTER_COUNT - UAVStartSlot ) ", "UINT", "NumUAVs")
PARAM(ctx, "            _Out_writes_opt_(NumUAVs) ", "ID3D11UnorderedAccessView **", "ppUnorderedAccessViews")
FUNC_END(ctx, "OMGetRenderTargetsAndUnorderedAccessViews")
FUNC_BEGIN(ctx, "OMGetBlendState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11BlendState **", "ppBlendState")
PARAM(ctx, "            _Out_opt_ ", "FLOAT *", "BlendFactor")
PARAM(ctx, "            _Out_opt_ ", "UINT *", "pSampleMask")
FUNC_END(ctx, "OMGetBlendState")
FUNC_BEGIN(ctx, "OMGetDepthStencilState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_opt_result_maybenull_ ", "ID3D11DepthStencilState **", "ppDepthStencilState")
PARAM(ctx, "            _Out_opt_ ", "UINT *", "pStencilRef")
FUNC_END(ctx, "OMGetDepthStencilState")
FUNC_BEGIN(ctx, "SOGetTargets")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_SO_BUFFER_SLOT_COUNT ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppSOTargets")
FUNC_END(ctx, "SOGetTargets")
FUNC_BEGIN(ctx, "RSGetState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11RasterizerState **", "ppRasterizerState")
FUNC_END(ctx, "RSGetState")
FUNC_BEGIN(ctx, "RSGetViewports")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE )*/  ", "UINT *", "pNumViewports")
PARAM(ctx, "            _Out_writes_opt_(*pNumViewports) ", "D3D11_VIEWPORT *", "pViewports")
FUNC_END(ctx, "RSGetViewports")
FUNC_BEGIN(ctx, "RSGetScissorRects")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE )*/  ", "UINT *", "pNumRects")
PARAM(ctx, "            _Out_writes_opt_(*pNumRects) ", "D3D11_RECT *", "pRects")
FUNC_END(ctx, "RSGetScissorRects")
FUNC_BEGIN(ctx, "HSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "HSGetShaderResources")
FUNC_BEGIN(ctx, "HSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11HullShader **", "ppHullShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "HSGetShader")
FUNC_BEGIN(ctx, "HSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "HSGetSamplers")
FUNC_BEGIN(ctx, "HSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "HSGetConstantBuffers")
FUNC_BEGIN(ctx, "DSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "DSGetShaderResources")
FUNC_BEGIN(ctx, "DSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11DomainShader **", "ppDomainShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "DSGetShader")
FUNC_BEGIN(ctx, "DSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "DSGetSamplers")
FUNC_BEGIN(ctx, "DSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "DSGetConstantBuffers")
FUNC_BEGIN(ctx, "CSGetShaderResources")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) ", "UINT", "NumViews")
PARAM(ctx, "            _Out_writes_opt_(NumViews) ", "ID3D11ShaderResourceView **", "ppShaderResourceViews")
FUNC_END(ctx, "CSGetShaderResources")
FUNC_BEGIN(ctx, "CSGetUnorderedAccessViews")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_1_UAV_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_1_UAV_SLOT_COUNT - StartSlot ) ", "UINT", "NumUAVs")
PARAM(ctx, "            _Out_writes_opt_(NumUAVs) ", "ID3D11UnorderedAccessView **", "ppUnorderedAccessViews")
FUNC_END(ctx, "CSGetUnorderedAccessViews")
FUNC_BEGIN(ctx, "CSGetShader")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_result_maybenull_ ", "ID3D11ComputeShader **", "ppComputeShader")
PARAM(ctx, "            _Out_writes_opt_(*pNumClassInstances) ", "ID3D11ClassInstance **", "ppClassInstances")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumClassInstances")
FUNC_END(ctx, "CSGetShader")
FUNC_BEGIN(ctx, "CSGetSamplers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) ", "UINT", "NumSamplers")
PARAM(ctx, "            _Out_writes_opt_(NumSamplers) ", "ID3D11SamplerState **", "ppSamplers")
FUNC_END(ctx, "CSGetSamplers")
FUNC_BEGIN(ctx, "CSGetConstantBuffers")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
FUNC_END(ctx, "CSGetConstantBuffers")
FUNC_BEGIN(ctx, "ClearState")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "ClearState")
FUNC_BEGIN(ctx, "Flush")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "Flush")
FUNC_BEGIN(ctx, "GetType")
RETURN_TYPE(ctx, "D3D11_DEVICE_CONTEXT_TYPE")
FUNC_END(ctx, "GetType")
FUNC_BEGIN(ctx, "GetContextFlags")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetContextFlags")
FUNC_BEGIN(ctx, "FinishCommandList")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "BOOL", "RestoreDeferredContextState")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11CommandList **", "ppCommandList")
FUNC_END(ctx, "FinishCommandList")
CLASS_END(ctx, "ID3D11DeviceContext")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoDecoder")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetCreationParameters")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_DECODER_DESC *", "pVideoDesc")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_DECODER_CONFIG *", "pConfig")
FUNC_END(ctx, "GetCreationParameters")
FUNC_BEGIN(ctx, "GetDriverHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pDriverHandle")
FUNC_END(ctx, "GetDriverHandle")
CLASS_END(ctx, "ID3D11VideoDecoder")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoProcessorEnumerator")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetVideoProcessorContentDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_CONTENT_DESC *", "pContentDesc")
FUNC_END(ctx, "GetVideoProcessorContentDesc")
FUNC_BEGIN(ctx, "CheckVideoProcessorFormat")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _Out_ ", "UINT *", "pFlags")
FUNC_END(ctx, "CheckVideoProcessorFormat")
FUNC_BEGIN(ctx, "GetVideoProcessorCaps")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_CAPS *", "pCaps")
FUNC_END(ctx, "GetVideoProcessorCaps")
FUNC_BEGIN(ctx, "GetVideoProcessorRateConversionCaps")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "TypeIndex")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS *", "pCaps")
FUNC_END(ctx, "GetVideoProcessorRateConversionCaps")
FUNC_BEGIN(ctx, "GetVideoProcessorCustomRate")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "TypeIndex")
PARAM(ctx, "            _In_ ", "UINT", "CustomRateIndex")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_CUSTOM_RATE *", "pRate")
FUNC_END(ctx, "GetVideoProcessorCustomRate")
FUNC_BEGIN(ctx, "GetVideoProcessorFilterRange")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_FILTER", "Filter")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_FILTER_RANGE *", "pRange")
FUNC_END(ctx, "GetVideoProcessorFilterRange")
CLASS_END(ctx, "ID3D11VideoProcessorEnumerator")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoProcessor")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetContentDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_CONTENT_DESC *", "pDesc")
FUNC_END(ctx, "GetContentDesc")
FUNC_BEGIN(ctx, "GetRateConversionCaps")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS *", "pCaps")
FUNC_END(ctx, "GetRateConversionCaps")
CLASS_END(ctx, "ID3D11VideoProcessor")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11AuthenticatedChannel")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetCertificateSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pCertificateSize")
FUNC_END(ctx, "GetCertificateSize")
FUNC_BEGIN(ctx, "GetCertificate")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "CertificateSize")
PARAM(ctx, "            _Out_writes_bytes_(CertificateSize) ", "BYTE *", "pCertificate")
FUNC_END(ctx, "GetCertificate")
FUNC_BEGIN(ctx, "GetChannelHandle")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pChannelHandle")
FUNC_END(ctx, "GetChannelHandle")
CLASS_END(ctx, "ID3D11AuthenticatedChannel")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11CryptoSession")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetCryptoType")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "GUID *", "pCryptoType")
FUNC_END(ctx, "GetCryptoType")
FUNC_BEGIN(ctx, "GetDecoderProfile")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "GUID *", "pDecoderProfile")
FUNC_END(ctx, "GetDecoderProfile")
FUNC_BEGIN(ctx, "GetCertificateSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pCertificateSize")
FUNC_END(ctx, "GetCertificateSize")
FUNC_BEGIN(ctx, "GetCertificate")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "CertificateSize")
PARAM(ctx, "            _Out_writes_bytes_(CertificateSize) ", "BYTE *", "pCertificate")
FUNC_END(ctx, "GetCertificate")
FUNC_BEGIN(ctx, "GetCryptoSessionHandle")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pCryptoSessionHandle")
FUNC_END(ctx, "GetCryptoSessionHandle")
CLASS_END(ctx, "ID3D11CryptoSession")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoDecoderOutputView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11VideoDecoderOutputView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoProcessorInputView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11VideoProcessorInputView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoProcessorOutputView")
INHERITS(ctx, "ID3D11View")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11VideoProcessorOutputView")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoContext")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "GetDecoderBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "           ", "D3D11_VIDEO_DECODER_BUFFER_TYPE", "Type")
PARAM(ctx, "            _Out_ ", "UINT *", "pBufferSize")
PARAM(ctx, "            _Outptr_result_bytebuffer_(*pBufferSize) ", "void **", "ppBuffer")
FUNC_END(ctx, "GetDecoderBuffer")
FUNC_BEGIN(ctx, "ReleaseDecoderBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_DECODER_BUFFER_TYPE", "Type")
FUNC_END(ctx, "ReleaseDecoderBuffer")
FUNC_BEGIN(ctx, "DecoderBeginFrame")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoderOutputView *", "pView")
PARAM(ctx, "           ", "UINT", "ContentKeySize")
PARAM(ctx, "            _In_reads_bytes_opt_(ContentKeySize) ", "const void *", "pContentKey")
FUNC_END(ctx, "DecoderBeginFrame")
FUNC_BEGIN(ctx, "DecoderEndFrame")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
FUNC_END(ctx, "DecoderEndFrame")
FUNC_BEGIN(ctx, "SubmitDecoderBuffers")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_(NumBuffers) ", "const D3D11_VIDEO_DECODER_BUFFER_DESC *", "pBufferDesc")
FUNC_END(ctx, "SubmitDecoderBuffers")
FUNC_BEGIN(ctx, "DecoderExtension")
RETURN_TYPE(ctx, "APP_DEPRECATED_HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_EXTENSION *", "pExtensionData")
FUNC_END(ctx, "DecoderExtension")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputTargetRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_opt_ ", "const RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorSetOutputTargetRect")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputBackgroundColor")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "BOOL", "YCbCr")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_COLOR *", "pColor")
FUNC_END(ctx, "VideoProcessorSetOutputBackgroundColor")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputColorSpace")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorSetOutputColorSpace")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputAlphaFillMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE", "AlphaFillMode")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
FUNC_END(ctx, "VideoProcessorSetOutputAlphaFillMode")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputConstriction")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "SIZE", "Size")
FUNC_END(ctx, "VideoProcessorSetOutputConstriction")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputStereoMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
FUNC_END(ctx, "VideoProcessorSetOutputStereoMode")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputExtension")
RETURN_TYPE(ctx, "APP_DEPRECATED_HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "const GUID *", "pExtensionGuid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_ ", "void *", "pData")
FUNC_END(ctx, "VideoProcessorSetOutputExtension")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputTargetRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "BOOL *", "Enabled")
PARAM(ctx, "            _Out_ ", "RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorGetOutputTargetRect")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputBackgroundColor")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "BOOL *", "pYCbCr")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_COLOR *", "pColor")
FUNC_END(ctx, "VideoProcessorGetOutputBackgroundColor")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputColorSpace")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_COLOR_SPACE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorGetOutputColorSpace")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputAlphaFillMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE *", "pAlphaFillMode")
PARAM(ctx, "            _Out_ ", "UINT *", "pStreamIndex")
FUNC_END(ctx, "VideoProcessorGetOutputAlphaFillMode")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputConstriction")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "SIZE *", "pSize")
FUNC_END(ctx, "VideoProcessorGetOutputConstriction")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputStereoMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
FUNC_END(ctx, "VideoProcessorGetOutputStereoMode")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputExtension")
RETURN_TYPE(ctx, "APP_DEPRECATED_HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "const GUID *", "pExtensionGuid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _Out_writes_bytes_(DataSize) ", "void *", "pData")
FUNC_END(ctx, "VideoProcessorGetOutputExtension")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamFrameFormat")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_FRAME_FORMAT", "FrameFormat")
FUNC_END(ctx, "VideoProcessorSetStreamFrameFormat")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamColorSpace")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_PROCESSOR_COLOR_SPACE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorSetStreamColorSpace")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamOutputRate")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_OUTPUT_RATE", "OutputRate")
PARAM(ctx, "            _In_ ", "BOOL", "RepeatFrame")
PARAM(ctx, "            _In_opt_ ", "const DXGI_RATIONAL *", "pCustomRate")
FUNC_END(ctx, "VideoProcessorSetStreamOutputRate")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamSourceRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_opt_ ", "const RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorSetStreamSourceRect")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamDestRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_opt_ ", "const RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorSetStreamDestRect")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamAlpha")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "FLOAT", "Alpha")
FUNC_END(ctx, "VideoProcessorSetStreamAlpha")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamPalette")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "UINT", "Count")
PARAM(ctx, "            _In_reads_opt_(Count) ", "const UINT *", "pEntries")
FUNC_END(ctx, "VideoProcessorSetStreamPalette")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamPixelAspectRatio")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_opt_ ", "const DXGI_RATIONAL *", "pSourceAspectRatio")
PARAM(ctx, "            _In_opt_ ", "const DXGI_RATIONAL *", "pDestinationAspectRatio")
FUNC_END(ctx, "VideoProcessorSetStreamPixelAspectRatio")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamLumaKey")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "FLOAT", "Lower")
PARAM(ctx, "            _In_ ", "FLOAT", "Upper")
FUNC_END(ctx, "VideoProcessorSetStreamLumaKey")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamStereoFormat")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_STEREO_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "BOOL", "LeftViewFrame0")
PARAM(ctx, "            _In_ ", "BOOL", "BaseViewFrame0")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE", "FlipMode")
PARAM(ctx, "            _In_ ", "int", "MonoOffset")
FUNC_END(ctx, "VideoProcessorSetStreamStereoFormat")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamAutoProcessingMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
FUNC_END(ctx, "VideoProcessorSetStreamAutoProcessingMode")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamFilter")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_FILTER", "Filter")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "int", "Level")
FUNC_END(ctx, "VideoProcessorSetStreamFilter")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamExtension")
RETURN_TYPE(ctx, "APP_DEPRECATED_HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "const GUID *", "pExtensionGuid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_ ", "void *", "pData")
FUNC_END(ctx, "VideoProcessorSetStreamExtension")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamFrameFormat")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_FRAME_FORMAT *", "pFrameFormat")
FUNC_END(ctx, "VideoProcessorGetStreamFrameFormat")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamColorSpace")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_COLOR_SPACE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorGetStreamColorSpace")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamOutputRate")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_OUTPUT_RATE *", "pOutputRate")
PARAM(ctx, "            _Out_ ", "BOOL *", "pRepeatFrame")
PARAM(ctx, "            _Out_ ", "DXGI_RATIONAL *", "pCustomRate")
FUNC_END(ctx, "VideoProcessorGetStreamOutputRate")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamSourceRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorGetStreamSourceRect")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamDestRect")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "RECT *", "pRect")
FUNC_END(ctx, "VideoProcessorGetStreamDestRect")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamAlpha")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "FLOAT *", "pAlpha")
FUNC_END(ctx, "VideoProcessorGetStreamAlpha")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamPalette")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "UINT", "Count")
PARAM(ctx, "            _Out_writes_(Count) ", "UINT *", "pEntries")
FUNC_END(ctx, "VideoProcessorGetStreamPalette")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamPixelAspectRatio")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "DXGI_RATIONAL *", "pSourceAspectRatio")
PARAM(ctx, "            _Out_ ", "DXGI_RATIONAL *", "pDestinationAspectRatio")
FUNC_END(ctx, "VideoProcessorGetStreamPixelAspectRatio")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamLumaKey")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "FLOAT *", "pLower")
PARAM(ctx, "            _Out_ ", "FLOAT *", "pUpper")
FUNC_END(ctx, "VideoProcessorGetStreamLumaKey")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamStereoFormat")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnable")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_STEREO_FORMAT *", "pFormat")
PARAM(ctx, "            _Out_ ", "BOOL *", "pLeftViewFrame0")
PARAM(ctx, "            _Out_ ", "BOOL *", "pBaseViewFrame0")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE *", "pFlipMode")
PARAM(ctx, "            _Out_ ", "int *", "MonoOffset")
FUNC_END(ctx, "VideoProcessorGetStreamStereoFormat")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamAutoProcessingMode")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
FUNC_END(ctx, "VideoProcessorGetStreamAutoProcessingMode")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamFilter")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_FILTER", "Filter")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnabled")
PARAM(ctx, "            _Out_ ", "int *", "pLevel")
FUNC_END(ctx, "VideoProcessorGetStreamFilter")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamExtension")
RETURN_TYPE(ctx, "APP_DEPRECATED_HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "const GUID *", "pExtensionGuid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _Out_writes_bytes_(DataSize) ", "void *", "pData")
FUNC_END(ctx, "VideoProcessorGetStreamExtension")
FUNC_BEGIN(ctx, "VideoProcessorBlt")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessorOutputView *", "pView")
PARAM(ctx, "            _In_ ", "UINT", "OutputFrame")
PARAM(ctx, "            _In_ ", "UINT", "StreamCount")
PARAM(ctx, "            _In_reads_(StreamCount) ", "const D3D11_VIDEO_PROCESSOR_STREAM *", "pStreams")
FUNC_END(ctx, "VideoProcessorBlt")
FUNC_BEGIN(ctx, "NegotiateCryptoSessionKeyExchange")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _Inout_updates_bytes_(DataSize) ", "void *", "pData")
FUNC_END(ctx, "NegotiateCryptoSessionKeyExchange")
FUNC_BEGIN(ctx, "EncryptionBlt")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "ID3D11Texture2D *", "pSrcSurface")
PARAM(ctx, "            _In_ ", "ID3D11Texture2D *", "pDstSurface")
PARAM(ctx, "            _In_ ", "UINT", "IVSize")
PARAM(ctx, "            _Inout_opt_bytecount_(IVSize) ", "void *", "pIV")
FUNC_END(ctx, "EncryptionBlt")
FUNC_BEGIN(ctx, "DecryptionBlt")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "ID3D11Texture2D *", "pSrcSurface")
PARAM(ctx, "            _In_ ", "ID3D11Texture2D *", "pDstSurface")
PARAM(ctx, "            _In_opt_ ", "D3D11_ENCRYPTED_BLOCK_INFO *", "pEncryptedBlockInfo")
PARAM(ctx, "            _In_ ", "UINT", "ContentKeySize")
PARAM(ctx, "            _In_reads_bytes_opt_(ContentKeySize) ", "const void *", "pContentKey")
PARAM(ctx, "            _In_ ", "UINT", "IVSize")
PARAM(ctx, "            _Inout_opt_bytecount_(IVSize) ", "void *", "pIV")
FUNC_END(ctx, "DecryptionBlt")
FUNC_BEGIN(ctx, "StartSessionKeyRefresh")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "UINT", "RandomNumberSize")
PARAM(ctx, "            _Out_writes_bytes_(RandomNumberSize) ", "void *", "pRandomNumber")
FUNC_END(ctx, "StartSessionKeyRefresh")
FUNC_BEGIN(ctx, "FinishSessionKeyRefresh")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
FUNC_END(ctx, "FinishSessionKeyRefresh")
FUNC_BEGIN(ctx, "GetEncryptionBltKey")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "UINT", "KeySize")
PARAM(ctx, "            _Out_writes_bytes_(KeySize) ", "void *", "pReadbackKey")
FUNC_END(ctx, "GetEncryptionBltKey")
FUNC_BEGIN(ctx, "NegotiateAuthenticatedChannelKeyExchange")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11AuthenticatedChannel *", "pChannel")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _Inout_updates_bytes_(DataSize) ", "void *", "pData")
FUNC_END(ctx, "NegotiateAuthenticatedChannelKeyExchange")
FUNC_BEGIN(ctx, "QueryAuthenticatedChannel")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11AuthenticatedChannel *", "pChannel")
PARAM(ctx, "            _In_ ", "UINT", "InputSize")
PARAM(ctx, "            _In_reads_bytes_(InputSize) ", "const void *", "pInput")
PARAM(ctx, "            _In_ ", "UINT", "OutputSize")
PARAM(ctx, "            _Out_writes_bytes_(OutputSize) ", "void *", "pOutput")
FUNC_END(ctx, "QueryAuthenticatedChannel")
FUNC_BEGIN(ctx, "ConfigureAuthenticatedChannel")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11AuthenticatedChannel *", "pChannel")
PARAM(ctx, "            _In_ ", "UINT", "InputSize")
PARAM(ctx, "            _In_reads_bytes_(InputSize) ", "const void *", "pInput")
PARAM(ctx, "            _Out_ ", "D3D11_AUTHENTICATED_CONFIGURE_OUTPUT *", "pOutput")
FUNC_END(ctx, "ConfigureAuthenticatedChannel")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamRotation")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "D3D11_VIDEO_PROCESSOR_ROTATION", "Rotation")
FUNC_END(ctx, "VideoProcessorSetStreamRotation")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamRotation")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnable")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_PROCESSOR_ROTATION *", "pRotation")
FUNC_END(ctx, "VideoProcessorGetStreamRotation")
CLASS_END(ctx, "ID3D11VideoContext")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoDevice")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "CreateVideoDecoder")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_DESC *", "pVideoDesc")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_CONFIG *", "pConfig")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11VideoDecoder **", "ppDecoder")
FUNC_END(ctx, "CreateVideoDecoder")
FUNC_BEGIN(ctx, "CreateVideoProcessor")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessorEnumerator *", "pEnum")
PARAM(ctx, "            _In_ ", "UINT", "RateConversionIndex")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11VideoProcessor **", "ppVideoProcessor")
FUNC_END(ctx, "CreateVideoProcessor")
FUNC_BEGIN(ctx, "CreateAuthenticatedChannel")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_AUTHENTICATED_CHANNEL_TYPE", "ChannelType")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11AuthenticatedChannel **", "ppAuthenticatedChannel")
FUNC_END(ctx, "CreateAuthenticatedChannel")
FUNC_BEGIN(ctx, "CreateCryptoSession")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID *", "pCryptoType")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _In_ ", "const GUID *", "pKeyExchangeType")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11CryptoSession **", "ppCryptoSession")
FUNC_END(ctx, "CreateCryptoSession")
FUNC_BEGIN(ctx, "CreateVideoDecoderOutputView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11VideoDecoderOutputView **", "ppVDOVView")
FUNC_END(ctx, "CreateVideoDecoderOutputView")
FUNC_BEGIN(ctx, "CreateVideoProcessorInputView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessorEnumerator *", "pEnum")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11VideoProcessorInputView **", "ppVPIView")
FUNC_END(ctx, "CreateVideoProcessorInputView")
FUNC_BEGIN(ctx, "CreateVideoProcessorOutputView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessorEnumerator *", "pEnum")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11VideoProcessorOutputView **", "ppVPOView")
FUNC_END(ctx, "CreateVideoProcessorOutputView")
FUNC_BEGIN(ctx, "CreateVideoProcessorEnumerator")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_PROCESSOR_CONTENT_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11VideoProcessorEnumerator **", "ppEnum")
FUNC_END(ctx, "CreateVideoProcessorEnumerator")
FUNC_BEGIN(ctx, "GetVideoDecoderProfileCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetVideoDecoderProfileCount")
FUNC_BEGIN(ctx, "GetVideoDecoderProfile")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "Index")
PARAM(ctx, "            _Out_ ", "GUID *", "pDecoderProfile")
FUNC_END(ctx, "GetVideoDecoderProfile")
FUNC_BEGIN(ctx, "CheckVideoDecoderFormat")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _Out_ ", "BOOL *", "pSupported")
FUNC_END(ctx, "CheckVideoDecoderFormat")
FUNC_BEGIN(ctx, "GetVideoDecoderConfigCount")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_DESC *", "pDesc")
PARAM(ctx, "            _Out_ ", "UINT *", "pCount")
FUNC_END(ctx, "GetVideoDecoderConfigCount")
FUNC_BEGIN(ctx, "GetVideoDecoderConfig")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_DESC *", "pDesc")
PARAM(ctx, "            _In_ ", "UINT", "Index")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_DECODER_CONFIG *", "pConfig")
FUNC_END(ctx, "GetVideoDecoderConfig")
FUNC_BEGIN(ctx, "GetContentProtectionCaps")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pCryptoType")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_CONTENT_PROTECTION_CAPS *", "pCaps")
FUNC_END(ctx, "GetContentProtectionCaps")
FUNC_BEGIN(ctx, "CheckCryptoKeyExchange")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID *", "pCryptoType")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _In_ ", "UINT", "Index")
PARAM(ctx, "            _Out_ ", "GUID *", "pKeyExchangeType")
FUNC_END(ctx, "CheckCryptoKeyExchange")
FUNC_BEGIN(ctx, "SetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_reads_bytes_opt_(DataSize) ", "const void *", "pData")
FUNC_END(ctx, "SetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateDataInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_opt_ ", "const struct IUnknown *", "pData")
FUNC_END(ctx, "SetPrivateDataInterface")
CLASS_END(ctx, "ID3D11VideoDevice")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "CreateBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_BUFFER_DESC *", "pDesc")
PARAM(ctx, "            _In_opt_ ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Buffer **", "ppBuffer")
FUNC_END(ctx, "CreateBuffer")
FUNC_BEGIN(ctx, "CreateTexture1D")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_TEXTURE1D_DESC *", "pDesc")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Texture1D **", "ppTexture1D")
FUNC_END(ctx, "CreateTexture1D")
FUNC_BEGIN(ctx, "CreateTexture2D")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_TEXTURE2D_DESC *", "pDesc")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Texture2D **", "ppTexture2D")
FUNC_END(ctx, "CreateTexture2D")
FUNC_BEGIN(ctx, "CreateTexture3D")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_TEXTURE3D_DESC *", "pDesc")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDesc->MipLevels)) ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Texture3D **", "ppTexture3D")
FUNC_END(ctx, "CreateTexture3D")
FUNC_BEGIN(ctx, "CreateShaderResourceView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_SHADER_RESOURCE_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11ShaderResourceView **", "ppSRView")
FUNC_END(ctx, "CreateShaderResourceView")
FUNC_BEGIN(ctx, "CreateUnorderedAccessView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_UNORDERED_ACCESS_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11UnorderedAccessView **", "ppUAView")
FUNC_END(ctx, "CreateUnorderedAccessView")
FUNC_BEGIN(ctx, "CreateRenderTargetView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_RENDER_TARGET_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11RenderTargetView **", "ppRTView")
FUNC_END(ctx, "CreateRenderTargetView")
FUNC_BEGIN(ctx, "CreateDepthStencilView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_DEPTH_STENCIL_VIEW_DESC *", "pDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DepthStencilView **", "ppDepthStencilView")
FUNC_END(ctx, "CreateDepthStencilView")
FUNC_BEGIN(ctx, "CreateInputLayout")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(NumElements) ", "const D3D11_INPUT_ELEMENT_DESC *", "pInputElementDescs")
PARAM(ctx, " D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ) ", "UINT", "NumElements")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecodeWithInputSignature")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11InputLayout **", "ppInputLayout")
FUNC_END(ctx, "CreateInputLayout")
FUNC_BEGIN(ctx, "CreateVertexShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11VertexShader **", "ppVertexShader")
FUNC_END(ctx, "CreateVertexShader")
FUNC_BEGIN(ctx, "CreateGeometryShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11GeometryShader **", "ppGeometryShader")
FUNC_END(ctx, "CreateGeometryShader")
FUNC_BEGIN(ctx, "CreateGeometryShaderWithStreamOutput")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_reads_opt_(NumEntries) ", "const D3D11_SO_DECLARATION_ENTRY *", "pSODeclaration")
PARAM(ctx, " D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ) ", "UINT", "NumEntries")
PARAM(ctx, "            _In_reads_opt_(NumStrides) ", "const UINT *", "pBufferStrides")
PARAM(ctx, " D3D11_SO_BUFFER_SLOT_COUNT ) ", "UINT", "NumStrides")
PARAM(ctx, "            _In_ ", "UINT", "RasterizedStream")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11GeometryShader **", "ppGeometryShader")
FUNC_END(ctx, "CreateGeometryShaderWithStreamOutput")
FUNC_BEGIN(ctx, "CreatePixelShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11PixelShader **", "ppPixelShader")
FUNC_END(ctx, "CreatePixelShader")
FUNC_BEGIN(ctx, "CreateHullShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11HullShader **", "ppHullShader")
FUNC_END(ctx, "CreateHullShader")
FUNC_BEGIN(ctx, "CreateDomainShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DomainShader **", "ppDomainShader")
FUNC_END(ctx, "CreateDomainShader")
FUNC_BEGIN(ctx, "CreateComputeShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_reads_(BytecodeLength) ", "const void *", "pShaderBytecode")
PARAM(ctx, "            _In_ ", "SIZE_T", "BytecodeLength")
PARAM(ctx, "            _In_opt_ ", "ID3D11ClassLinkage *", "pClassLinkage")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11ComputeShader **", "ppComputeShader")
FUNC_END(ctx, "CreateComputeShader")
FUNC_BEGIN(ctx, "CreateClassLinkage")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _COM_Outptr_ ", "ID3D11ClassLinkage **", "ppLinkage")
FUNC_END(ctx, "CreateClassLinkage")
FUNC_BEGIN(ctx, "CreateBlendState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_BLEND_DESC *", "pBlendStateDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11BlendState **", "ppBlendState")
FUNC_END(ctx, "CreateBlendState")
FUNC_BEGIN(ctx, "CreateDepthStencilState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_DEPTH_STENCIL_DESC *", "pDepthStencilDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DepthStencilState **", "ppDepthStencilState")
FUNC_END(ctx, "CreateDepthStencilState")
FUNC_BEGIN(ctx, "CreateRasterizerState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_RASTERIZER_DESC *", "pRasterizerDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11RasterizerState **", "ppRasterizerState")
FUNC_END(ctx, "CreateRasterizerState")
FUNC_BEGIN(ctx, "CreateSamplerState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_SAMPLER_DESC *", "pSamplerDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11SamplerState **", "ppSamplerState")
FUNC_END(ctx, "CreateSamplerState")
FUNC_BEGIN(ctx, "CreateQuery")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_QUERY_DESC *", "pQueryDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Query **", "ppQuery")
FUNC_END(ctx, "CreateQuery")
FUNC_BEGIN(ctx, "CreatePredicate")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_QUERY_DESC *", "pPredicateDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Predicate **", "ppPredicate")
FUNC_END(ctx, "CreatePredicate")
FUNC_BEGIN(ctx, "CreateCounter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_COUNTER_DESC *", "pCounterDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Counter **", "ppCounter")
FUNC_END(ctx, "CreateCounter")
FUNC_BEGIN(ctx, "CreateDeferredContext")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "ContextFlags")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DeviceContext **", "ppDeferredContext")
FUNC_END(ctx, "CreateDeferredContext")
FUNC_BEGIN(ctx, "OpenSharedResource")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hResource")
PARAM(ctx, "            _In_ ", "const IID &", "ReturnedInterface")
PARAM(ctx, "            _COM_Outptr_opt_ ", "void **", "ppResource")
FUNC_END(ctx, "OpenSharedResource")
FUNC_BEGIN(ctx, "CheckFormatSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _Out_ ", "UINT *", "pFormatSupport")
FUNC_END(ctx, "CheckFormatSupport")
FUNC_BEGIN(ctx, "CheckMultisampleQualityLevels")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "UINT", "SampleCount")
PARAM(ctx, "            _Out_ ", "UINT *", "pNumQualityLevels")
FUNC_END(ctx, "CheckMultisampleQualityLevels")
FUNC_BEGIN(ctx, "CheckCounterInfo")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_COUNTER_INFO *", "pCounterInfo")
FUNC_END(ctx, "CheckCounterInfo")
FUNC_BEGIN(ctx, "CheckCounter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_COUNTER_DESC *", "pDesc")
PARAM(ctx, "            _Out_ ", "D3D11_COUNTER_TYPE *", "pType")
PARAM(ctx, "            _Out_ ", "UINT *", "pActiveCounters")
PARAM(ctx, "            _Out_writes_opt_(*pNameLength) ", "LPSTR", "szName")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNameLength")
PARAM(ctx, "            _Out_writes_opt_(*pUnitsLength) ", "LPSTR", "szUnits")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pUnitsLength")
PARAM(ctx, "            _Out_writes_opt_(*pDescriptionLength) ", "LPSTR", "szDescription")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pDescriptionLength")
FUNC_END(ctx, "CheckCounter")
FUNC_BEGIN(ctx, "CheckFeatureSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "D3D11_FEATURE", "Feature")
PARAM(ctx, "            _Out_writes_bytes_(FeatureSupportDataSize) ", "void *", "pFeatureSupportData")
PARAM(ctx, "           ", "UINT", "FeatureSupportDataSize")
FUNC_END(ctx, "CheckFeatureSupport")
FUNC_BEGIN(ctx, "GetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _Inout_ ", "UINT *", "pDataSize")
PARAM(ctx, "            _Out_writes_bytes_opt_(*pDataSize) ", "void *", "pData")
FUNC_END(ctx, "GetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _In_reads_bytes_opt_(DataSize) ", "const void *", "pData")
FUNC_END(ctx, "SetPrivateData")
FUNC_BEGIN(ctx, "SetPrivateDataInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID &", "guid")
PARAM(ctx, "            _In_opt_ ", "const struct IUnknown *", "pData")
FUNC_END(ctx, "SetPrivateDataInterface")
FUNC_BEGIN(ctx, "GetFeatureLevel")
RETURN_TYPE(ctx, "D3D_FEATURE_LEVEL")
FUNC_END(ctx, "GetFeatureLevel")
FUNC_BEGIN(ctx, "GetCreationFlags")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetCreationFlags")
FUNC_BEGIN(ctx, "GetDeviceRemovedReason")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "GetDeviceRemovedReason")
FUNC_BEGIN(ctx, "GetImmediateContext")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11DeviceContext **", "ppImmediateContext")
FUNC_END(ctx, "GetImmediateContext")
FUNC_BEGIN(ctx, "SetExceptionMode")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "RaiseFlags")
FUNC_END(ctx, "SetExceptionMode")
FUNC_BEGIN(ctx, "GetExceptionMode")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetExceptionMode")
CLASS_END(ctx, "ID3D11Device")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Debug")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetFeatureMask")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Mask")
FUNC_END(ctx, "SetFeatureMask")
FUNC_BEGIN(ctx, "GetFeatureMask")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetFeatureMask")
FUNC_BEGIN(ctx, "SetPresentPerRenderOpDelay")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Milliseconds")
FUNC_END(ctx, "SetPresentPerRenderOpDelay")
FUNC_BEGIN(ctx, "GetPresentPerRenderOpDelay")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetPresentPerRenderOpDelay")
FUNC_BEGIN(ctx, "SetSwapChain")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_opt_ ", "IDXGISwapChain *", "pSwapChain")
FUNC_END(ctx, "SetSwapChain")
FUNC_BEGIN(ctx, "GetSwapChain")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "IDXGISwapChain **", "ppSwapChain")
FUNC_END(ctx, "GetSwapChain")
FUNC_BEGIN(ctx, "ValidateContext")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11DeviceContext *", "pContext")
FUNC_END(ctx, "ValidateContext")
FUNC_BEGIN(ctx, "ReportLiveDeviceObjects")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "D3D11_RLDO_FLAGS", "Flags")
FUNC_END(ctx, "ReportLiveDeviceObjects")
FUNC_BEGIN(ctx, "ValidateContextForDispatch")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11DeviceContext *", "pContext")
FUNC_END(ctx, "ValidateContextForDispatch")
CLASS_END(ctx, "ID3D11Debug")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11SwitchToRef")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetUseRef")
RETURN_TYPE(ctx, "BOOL")
PARAM(ctx, "           ", "BOOL", "UseRef")
FUNC_END(ctx, "SetUseRef")
FUNC_BEGIN(ctx, "GetUseRef")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "GetUseRef")
CLASS_END(ctx, "ID3D11SwitchToRef")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11TracingDevice")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetShaderTrackingOptionsByType")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "ResourceTypeFlags")
PARAM(ctx, "            _In_ ", "UINT", "Options")
FUNC_END(ctx, "SetShaderTrackingOptionsByType")
FUNC_BEGIN(ctx, "SetShaderTrackingOptions")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pShader")
PARAM(ctx, "            _In_ ", "UINT", "Options")
FUNC_END(ctx, "SetShaderTrackingOptions")
CLASS_END(ctx, "ID3D11TracingDevice")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RefTrackingOptions")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetTrackingOptions")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "uOptions")
FUNC_END(ctx, "SetTrackingOptions")
CLASS_END(ctx, "ID3D11RefTrackingOptions")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RefDefaultTrackingOptions")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetTrackingOptions")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "ResourceTypeFlags")
PARAM(ctx, "           ", "UINT", "Options")
FUNC_END(ctx, "SetTrackingOptions")
CLASS_END(ctx, "ID3D11RefDefaultTrackingOptions")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11InfoQueue")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "SetMessageCountLimit")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT64", "MessageCountLimit")
FUNC_END(ctx, "SetMessageCountLimit")
FUNC_BEGIN(ctx, "ClearStoredMessages")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "ClearStoredMessages")
FUNC_BEGIN(ctx, "GetMessageW")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT64", "MessageIndex")
PARAM(ctx, "            _Out_writes_bytes_opt_(*pMessageByteLength) ", "D3D11_MESSAGE *", "pMessage")
PARAM(ctx, "            _Inout_ ", "SIZE_T *", "pMessageByteLength")
FUNC_END(ctx, "GetMessageA")
FUNC_BEGIN(ctx, "GetNumMessagesAllowedByStorageFilter")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetNumMessagesAllowedByStorageFilter")
FUNC_BEGIN(ctx, "GetNumMessagesDeniedByStorageFilter")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetNumMessagesDeniedByStorageFilter")
FUNC_BEGIN(ctx, "GetNumStoredMessages")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetNumStoredMessages")
FUNC_BEGIN(ctx, "GetNumStoredMessagesAllowedByRetrievalFilter")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetNumStoredMessagesAllowedByRetrievalFilter")
FUNC_BEGIN(ctx, "GetNumMessagesDiscardedByMessageCountLimit")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetNumMessagesDiscardedByMessageCountLimit")
FUNC_BEGIN(ctx, "GetMessageCountLimit")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetMessageCountLimit")
FUNC_BEGIN(ctx, "AddStorageFilterEntries")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
FUNC_END(ctx, "AddStorageFilterEntries")
FUNC_BEGIN(ctx, "GetStorageFilter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_writes_bytes_opt_(*pFilterByteLength) ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
PARAM(ctx, "            _Inout_ ", "SIZE_T *", "pFilterByteLength")
FUNC_END(ctx, "GetStorageFilter")
FUNC_BEGIN(ctx, "ClearStorageFilter")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "ClearStorageFilter")
FUNC_BEGIN(ctx, "PushEmptyStorageFilter")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "PushEmptyStorageFilter")
FUNC_BEGIN(ctx, "PushCopyOfStorageFilter")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "PushCopyOfStorageFilter")
FUNC_BEGIN(ctx, "PushStorageFilter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
FUNC_END(ctx, "PushStorageFilter")
FUNC_BEGIN(ctx, "PopStorageFilter")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "PopStorageFilter")
FUNC_BEGIN(ctx, "GetStorageFilterStackSize")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetStorageFilterStackSize")
FUNC_BEGIN(ctx, "AddRetrievalFilterEntries")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
FUNC_END(ctx, "AddRetrievalFilterEntries")
FUNC_BEGIN(ctx, "GetRetrievalFilter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_writes_bytes_opt_(*pFilterByteLength) ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
PARAM(ctx, "            _Inout_ ", "SIZE_T *", "pFilterByteLength")
FUNC_END(ctx, "GetRetrievalFilter")
FUNC_BEGIN(ctx, "ClearRetrievalFilter")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "ClearRetrievalFilter")
FUNC_BEGIN(ctx, "PushEmptyRetrievalFilter")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "PushEmptyRetrievalFilter")
FUNC_BEGIN(ctx, "PushCopyOfRetrievalFilter")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "PushCopyOfRetrievalFilter")
FUNC_BEGIN(ctx, "PushRetrievalFilter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_INFO_QUEUE_FILTER *", "pFilter")
FUNC_END(ctx, "PushRetrievalFilter")
FUNC_BEGIN(ctx, "PopRetrievalFilter")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "PopRetrievalFilter")
FUNC_BEGIN(ctx, "GetRetrievalFilterStackSize")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetRetrievalFilterStackSize")
FUNC_BEGIN(ctx, "AddMessage")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_CATEGORY", "Category")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_SEVERITY", "Severity")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_ID", "ID")
PARAM(ctx, "            _In_ ", "LPCSTR", "pDescription")
FUNC_END(ctx, "AddMessage")
FUNC_BEGIN(ctx, "AddApplicationMessage")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_SEVERITY", "Severity")
PARAM(ctx, "            _In_ ", "LPCSTR", "pDescription")
FUNC_END(ctx, "AddApplicationMessage")
FUNC_BEGIN(ctx, "SetBreakOnCategory")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_CATEGORY", "Category")
PARAM(ctx, "            _In_ ", "BOOL", "bEnable")
FUNC_END(ctx, "SetBreakOnCategory")
FUNC_BEGIN(ctx, "SetBreakOnSeverity")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_SEVERITY", "Severity")
PARAM(ctx, "            _In_ ", "BOOL", "bEnable")
FUNC_END(ctx, "SetBreakOnSeverity")
FUNC_BEGIN(ctx, "SetBreakOnID")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_ID", "ID")
PARAM(ctx, "            _In_ ", "BOOL", "bEnable")
FUNC_END(ctx, "SetBreakOnID")
FUNC_BEGIN(ctx, "GetBreakOnCategory")
RETURN_TYPE(ctx, "BOOL")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_CATEGORY", "Category")
FUNC_END(ctx, "GetBreakOnCategory")
FUNC_BEGIN(ctx, "GetBreakOnSeverity")
RETURN_TYPE(ctx, "BOOL")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_SEVERITY", "Severity")
FUNC_END(ctx, "GetBreakOnSeverity")
FUNC_BEGIN(ctx, "GetBreakOnID")
RETURN_TYPE(ctx, "BOOL")
PARAM(ctx, "            _In_ ", "D3D11_MESSAGE_ID", "ID")
FUNC_END(ctx, "GetBreakOnID")
FUNC_BEGIN(ctx, "SetMuteDebugOutput")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "BOOL", "bMute")
FUNC_END(ctx, "SetMuteDebugOutput")
FUNC_BEGIN(ctx, "GetMuteDebugOutput")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "GetMuteDebugOutput")
CLASS_END(ctx, "ID3D11InfoQueue")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3D11CreateDevice")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    _In_opt_", "IDXGIAdapter *", "pAdapter")
PARAM(ctx, "   ", "D3D_DRIVER_TYPE", "DriverType")
PARAM(ctx, "   ", "HMODULE", "Software")
PARAM(ctx, "   ", "UINT", "Flags")
PARAM(ctx, "    _In_reads_opt_( FeatureLevels )", "const D3D_FEATURE_LEVEL *", "pFeatureLevels")
PARAM(ctx, "   ", "UINT", "FeatureLevels")
PARAM(ctx, "   ", "UINT", "SDKVersion")
PARAM(ctx, "    _COM_Outptr_opt_", "ID3D11Device **", "ppDevice")
PARAM(ctx, "    _Out_opt_", "D3D_FEATURE_LEVEL *", "pFeatureLevel")
PARAM(ctx, "    _COM_Outptr_opt_", "ID3D11DeviceContext **", "ppImmediateContext")
FUNC_END(ctx, "D3D11CreateDevice")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3D11CreateDeviceAndSwapChain")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    _In_opt_", "IDXGIAdapter *", "pAdapter")
PARAM(ctx, "   ", "D3D_DRIVER_TYPE", "DriverType")
PARAM(ctx, "   ", "HMODULE", "Software")
PARAM(ctx, "   ", "UINT", "Flags")
PARAM(ctx, "    _In_reads_opt_( FeatureLevels )", "const D3D_FEATURE_LEVEL *", "pFeatureLevels")
PARAM(ctx, "   ", "UINT", "FeatureLevels")
PARAM(ctx, "   ", "UINT", "SDKVersion")
PARAM(ctx, "    _In_opt_", "const DXGI_SWAP_CHAIN_DESC *", "pSwapChainDesc")
PARAM(ctx, "    _COM_Outptr_opt_", "IDXGISwapChain **", "ppSwapChain")
PARAM(ctx, "    _COM_Outptr_opt_", "ID3D11Device **", "ppDevice")
PARAM(ctx, "    _Out_opt_", "D3D_FEATURE_LEVEL *", "pFeatureLevel")
PARAM(ctx, "    _COM_Outptr_opt_", "ID3D11DeviceContext **", "ppImmediateContext")
FUNC_END(ctx, "D3D11CreateDeviceAndSwapChain")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3DDeviceContextState")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3DDeviceContextState")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDisplayControl")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "IsStereoEnabled")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsStereoEnabled")
FUNC_BEGIN(ctx, "SetStereoEnabled")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "           ", "BOOL", "enabled")
FUNC_END(ctx, "SetStereoEnabled")
CLASS_END(ctx, "IDXGIDisplayControl")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutputDuplication")
INHERITS(ctx, "IDXGIObject")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "DXGI_OUTDUPL_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "AcquireNextFrame")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "TimeoutInMilliseconds")
PARAM(ctx, "            _Out_ ", "DXGI_OUTDUPL_FRAME_INFO *", "pFrameInfo")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIResource **", "ppDesktopResource")
FUNC_END(ctx, "AcquireNextFrame")
FUNC_BEGIN(ctx, "GetFrameDirtyRects")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "DirtyRectsBufferSize")
PARAM(ctx, " *pDirtyRectsBufferSizeRequired) ", "RECT *", "pDirtyRectsBuffer")
PARAM(ctx, "            _Out_ ", "UINT *", "pDirtyRectsBufferSizeRequired")
FUNC_END(ctx, "GetFrameDirtyRects")
FUNC_BEGIN(ctx, "GetFrameMoveRects")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "MoveRectsBufferSize")
PARAM(ctx, " *pMoveRectsBufferSizeRequired) ", "DXGI_OUTDUPL_MOVE_RECT *", "pMoveRectBuffer")
PARAM(ctx, "            _Out_ ", "UINT *", "pMoveRectsBufferSizeRequired")
FUNC_END(ctx, "GetFrameMoveRects")
FUNC_BEGIN(ctx, "GetFramePointerShape")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "PointerShapeBufferSize")
PARAM(ctx, " *pPointerShapeBufferSizeRequired) ", "void *", "pPointerShapeBuffer")
PARAM(ctx, "            _Out_ ", "UINT *", "pPointerShapeBufferSizeRequired")
PARAM(ctx, "            _Out_ ", "DXGI_OUTDUPL_POINTER_SHAPE_INFO *", "pPointerShapeInfo")
FUNC_END(ctx, "GetFramePointerShape")
FUNC_BEGIN(ctx, "MapDesktopSurface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_MAPPED_RECT *", "pLockedRect")
FUNC_END(ctx, "MapDesktopSurface")
FUNC_BEGIN(ctx, "UnMapDesktopSurface")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "UnMapDesktopSurface")
FUNC_BEGIN(ctx, "ReleaseFrame")
RETURN_TYPE(ctx, "HRESULT")
FUNC_END(ctx, "ReleaseFrame")
CLASS_END(ctx, "IDXGIOutputDuplication")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISurface2")
INHERITS(ctx, "IDXGISurface1")
FUNC_BEGIN(ctx, "GetResource")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppParentResource")
PARAM(ctx, "            _Out_ ", "UINT *", "pSubresourceIndex")
FUNC_END(ctx, "GetResource")
CLASS_END(ctx, "IDXGISurface2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIResource1")
INHERITS(ctx, "IDXGIResource")
FUNC_BEGIN(ctx, "CreateSubresourceSurface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "index")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISurface2 **", "ppSurface")
FUNC_END(ctx, "CreateSubresourceSurface")
FUNC_BEGIN(ctx, "CreateSharedHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_opt_ ", "const SECURITY_ATTRIBUTES *", "pAttributes")
PARAM(ctx, "            _In_ ", "DWORD", "dwAccess")
PARAM(ctx, "            _In_opt_ ", "LPCWSTR", "lpName")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pHandle")
FUNC_END(ctx, "CreateSharedHandle")
CLASS_END(ctx, "IDXGIResource1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDevice2")
INHERITS(ctx, "IDXGIDevice1")
FUNC_BEGIN(ctx, "OfferResources")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NumResources")
PARAM(ctx, "            _In_reads_(NumResources) ", "IDXGIResource *const *", "ppResources")
PARAM(ctx, "            _In_ ", "DXGI_OFFER_RESOURCE_PRIORITY", "Priority")
FUNC_END(ctx, "OfferResources")
FUNC_BEGIN(ctx, "ReclaimResources")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NumResources")
PARAM(ctx, "            _In_reads_(NumResources) ", "IDXGIResource *const *", "ppResources")
PARAM(ctx, "            _Out_writes_all_opt_(NumResources) ", "BOOL *", "pDiscarded")
FUNC_END(ctx, "ReclaimResources")
FUNC_BEGIN(ctx, "EnqueueSetEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
FUNC_END(ctx, "EnqueueSetEvent")
CLASS_END(ctx, "IDXGIDevice2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChain1")
INHERITS(ctx, "IDXGISwapChain")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_SWAP_CHAIN_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
FUNC_BEGIN(ctx, "GetFullscreenDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_SWAP_CHAIN_FULLSCREEN_DESC *", "pDesc")
FUNC_END(ctx, "GetFullscreenDesc")
FUNC_BEGIN(ctx, "GetHwnd")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "HWND *", "pHwnd")
FUNC_END(ctx, "GetHwnd")
FUNC_BEGIN(ctx, "GetCoreWindow")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const IID &", "refiid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppUnk")
FUNC_END(ctx, "GetCoreWindow")
FUNC_BEGIN(ctx, "Present1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "UINT", "SyncInterval")
PARAM(ctx, "            /* [in] */", "UINT", "PresentFlags")
PARAM(ctx, "            _In_ ", "const DXGI_PRESENT_PARAMETERS *", "pPresentParameters")
FUNC_END(ctx, "Present1")
FUNC_BEGIN(ctx, "IsTemporaryMonoSupported")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsTemporaryMonoSupported")
FUNC_BEGIN(ctx, "GetRestrictToOutput")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "IDXGIOutput **", "ppRestrictToOutput")
FUNC_END(ctx, "GetRestrictToOutput")
FUNC_BEGIN(ctx, "SetBackgroundColor")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_RGBA *", "pColor")
FUNC_END(ctx, "SetBackgroundColor")
FUNC_BEGIN(ctx, "GetBackgroundColor")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_RGBA *", "pColor")
FUNC_END(ctx, "GetBackgroundColor")
FUNC_BEGIN(ctx, "SetRotation")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_MODE_ROTATION", "Rotation")
FUNC_END(ctx, "SetRotation")
FUNC_BEGIN(ctx, "GetRotation")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_MODE_ROTATION *", "pRotation")
FUNC_END(ctx, "GetRotation")
CLASS_END(ctx, "IDXGISwapChain1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory2")
INHERITS(ctx, "IDXGIFactory1")
FUNC_BEGIN(ctx, "IsWindowedStereoEnabled")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsWindowedStereoEnabled")
FUNC_BEGIN(ctx, "CreateSwapChainForHwnd")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_ ", "HWND", "hWnd")
PARAM(ctx, "            _In_ ", "const DXGI_SWAP_CHAIN_DESC1 *", "pDesc")
PARAM(ctx, "            _In_opt_ ", "const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *", "pFullscreenDesc")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pRestrictToOutput")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISwapChain1 **", "ppSwapChain")
FUNC_END(ctx, "CreateSwapChainForHwnd")
FUNC_BEGIN(ctx, "CreateSwapChainForCoreWindow")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pWindow")
PARAM(ctx, "            _In_ ", "const DXGI_SWAP_CHAIN_DESC1 *", "pDesc")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pRestrictToOutput")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISwapChain1 **", "ppSwapChain")
FUNC_END(ctx, "CreateSwapChainForCoreWindow")
FUNC_BEGIN(ctx, "GetSharedResourceAdapterLuid")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hResource")
PARAM(ctx, "            _Out_ ", "LUID *", "pLuid")
FUNC_END(ctx, "GetSharedResourceAdapterLuid")
FUNC_BEGIN(ctx, "RegisterStereoStatusWindow")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HWND", "WindowHandle")
PARAM(ctx, "            _In_ ", "UINT", "wMsg")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterStereoStatusWindow")
FUNC_BEGIN(ctx, "RegisterStereoStatusEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterStereoStatusEvent")
FUNC_BEGIN(ctx, "UnregisterStereoStatus")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "DWORD", "dwCookie")
FUNC_END(ctx, "UnregisterStereoStatus")
FUNC_BEGIN(ctx, "RegisterOcclusionStatusWindow")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HWND", "WindowHandle")
PARAM(ctx, "            _In_ ", "UINT", "wMsg")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterOcclusionStatusWindow")
FUNC_BEGIN(ctx, "RegisterOcclusionStatusEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterOcclusionStatusEvent")
FUNC_BEGIN(ctx, "UnregisterOcclusionStatus")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "DWORD", "dwCookie")
FUNC_END(ctx, "UnregisterOcclusionStatus")
FUNC_BEGIN(ctx, "CreateSwapChainForComposition")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_ ", "const DXGI_SWAP_CHAIN_DESC1 *", "pDesc")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pRestrictToOutput")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISwapChain1 **", "ppSwapChain")
FUNC_END(ctx, "CreateSwapChainForComposition")
CLASS_END(ctx, "IDXGIFactory2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIAdapter2")
INHERITS(ctx, "IDXGIAdapter1")
FUNC_BEGIN(ctx, "GetDesc2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_ADAPTER_DESC2 *", "pDesc")
FUNC_END(ctx, "GetDesc2")
CLASS_END(ctx, "IDXGIAdapter2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput1")
INHERITS(ctx, "IDXGIOutput")
FUNC_BEGIN(ctx, "GetDisplayModeList1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            /* [in] */", "DXGI_FORMAT", "EnumFormat")
PARAM(ctx, "            /* [in] */", "UINT", "Flags")
PARAM(ctx, "            _Inout_ ", "UINT *", "pNumModes")
PARAM(ctx, "*pNumModes) ", "DXGI_MODE_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDisplayModeList1")
FUNC_BEGIN(ctx, "FindClosestMatchingMode1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const DXGI_MODE_DESC1 *", "pModeToMatch")
PARAM(ctx, "            _Out_ ", "DXGI_MODE_DESC1 *", "pClosestMatch")
PARAM(ctx, "            _In_opt_ ", "struct IUnknown *", "pConcernedDevice")
FUNC_END(ctx, "FindClosestMatchingMode1")
FUNC_BEGIN(ctx, "GetDisplaySurfaceData1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "IDXGIResource *", "pDestination")
FUNC_END(ctx, "GetDisplaySurfaceData1")
FUNC_BEGIN(ctx, "DuplicateOutput")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIOutputDuplication **", "ppOutputDuplication")
FUNC_END(ctx, "DuplicateOutput")
CLASS_END(ctx, "IDXGIOutput1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11BlendState1")
INHERITS(ctx, "ID3D11BlendState")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_BLEND_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11BlendState1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RasterizerState1")
INHERITS(ctx, "ID3D11RasterizerState")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RASTERIZER_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11RasterizerState1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3DDeviceContextState")
INHERITS(ctx, "ID3D11DeviceChild")
CLASS_END(ctx, "ID3DDeviceContextState")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceContext1")
INHERITS(ctx, "ID3D11DeviceContext")
FUNC_BEGIN(ctx, "CopySubresourceRegion1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_ ", "UINT", "DstX")
PARAM(ctx, "            _In_ ", "UINT", "DstY")
PARAM(ctx, "            _In_ ", "UINT", "DstZ")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSrcResource")
PARAM(ctx, "            _In_ ", "UINT", "SrcSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pSrcBox")
PARAM(ctx, "            _In_ ", "UINT", "CopyFlags")
FUNC_END(ctx, "CopySubresourceRegion1")
FUNC_BEGIN(ctx, "UpdateSubresource1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pDstBox")
PARAM(ctx, "            _In_ ", "const void *", "pSrcData")
PARAM(ctx, "            _In_ ", "UINT", "SrcRowPitch")
PARAM(ctx, "            _In_ ", "UINT", "SrcDepthPitch")
PARAM(ctx, "            _In_ ", "UINT", "CopyFlags")
FUNC_END(ctx, "UpdateSubresource1")
FUNC_BEGIN(ctx, "DiscardResource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
FUNC_END(ctx, "DiscardResource")
FUNC_BEGIN(ctx, "DiscardView")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11View *", "pResourceView")
FUNC_END(ctx, "DiscardView")
FUNC_BEGIN(ctx, "VSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "VSSetConstantBuffers1")
FUNC_BEGIN(ctx, "HSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "HSSetConstantBuffers1")
FUNC_BEGIN(ctx, "DSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "DSSetConstantBuffers1")
FUNC_BEGIN(ctx, "GSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "GSSetConstantBuffers1")
FUNC_BEGIN(ctx, "PSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "PSSetConstantBuffers1")
FUNC_BEGIN(ctx, "CSSetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "ID3D11Buffer *const *", "ppConstantBuffers")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pFirstConstant")
PARAM(ctx, "            _In_reads_opt_(NumBuffers) ", "const UINT *", "pNumConstants")
FUNC_END(ctx, "CSSetConstantBuffers1")
FUNC_BEGIN(ctx, "VSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "VSGetConstantBuffers1")
FUNC_BEGIN(ctx, "HSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "HSGetConstantBuffers1")
FUNC_BEGIN(ctx, "DSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "DSGetConstantBuffers1")
FUNC_BEGIN(ctx, "GSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "GSGetConstantBuffers1")
FUNC_BEGIN(ctx, "PSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "PSGetConstantBuffers1")
FUNC_BEGIN(ctx, "CSGetConstantBuffers1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) ", "UINT", "StartSlot")
PARAM(ctx, " D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) ", "UINT", "NumBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "ID3D11Buffer **", "ppConstantBuffers")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pFirstConstant")
PARAM(ctx, "            _Out_writes_opt_(NumBuffers) ", "UINT *", "pNumConstants")
FUNC_END(ctx, "CSGetConstantBuffers1")
FUNC_BEGIN(ctx, "SwapDeviceContextState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3DDeviceContextState *", "pState")
PARAM(ctx, "            _Outptr_opt_ ", "ID3DDeviceContextState **", "ppPreviousState")
FUNC_END(ctx, "SwapDeviceContextState")
FUNC_BEGIN(ctx, "ClearView")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11View *", "pView")
PARAM(ctx, "            _In_ ", "const FLOAT *", "Color")
PARAM(ctx, "            _In_reads_opt_(NumRects) ", "const D3D11_RECT *", "pRect")
PARAM(ctx, "           ", "UINT", "NumRects")
FUNC_END(ctx, "ClearView")
FUNC_BEGIN(ctx, "DiscardView1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11View *", "pResourceView")
PARAM(ctx, "            _In_reads_opt_(NumRects) ", "const D3D11_RECT *", "pRects")
PARAM(ctx, "           ", "UINT", "NumRects")
FUNC_END(ctx, "DiscardView1")
CLASS_END(ctx, "ID3D11DeviceContext1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoContext1")
INHERITS(ctx, "ID3D11VideoContext")
FUNC_BEGIN(ctx, "SubmitDecoderBuffers1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_(NumBuffers) ", "const D3D11_VIDEO_DECODER_BUFFER_DESC1 *", "pBufferDesc")
FUNC_END(ctx, "SubmitDecoderBuffers1")
FUNC_BEGIN(ctx, "GetDataForNewHardwareKey")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "UINT", "PrivateInputSize")
PARAM(ctx, "            _In_reads_(PrivateInputSize) ", "const void *", "pPrivatInputData")
PARAM(ctx, "            _Out_ ", "UINT64 *", "pPrivateOutputData")
FUNC_END(ctx, "GetDataForNewHardwareKey")
FUNC_BEGIN(ctx, "CheckCryptoSessionStatus")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _Out_ ", "D3D11_CRYPTO_SESSION_STATUS *", "pStatus")
FUNC_END(ctx, "CheckCryptoSessionStatus")
FUNC_BEGIN(ctx, "DecoderEnableDownsampling")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "InputColorSpace")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_SAMPLE_DESC *", "pOutputDesc")
PARAM(ctx, "            _In_ ", "UINT", "ReferenceFrameCount")
FUNC_END(ctx, "DecoderEnableDownsampling")
FUNC_BEGIN(ctx, "DecoderUpdateDownsampling")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_SAMPLE_DESC *", "pOutputDesc")
FUNC_END(ctx, "DecoderUpdateDownsampling")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputColorSpace1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "ColorSpace")
FUNC_END(ctx, "VideoProcessorSetOutputColorSpace1")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputShaderUsage")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "BOOL", "ShaderUsage")
FUNC_END(ctx, "VideoProcessorSetOutputShaderUsage")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputColorSpace1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "DXGI_COLOR_SPACE_TYPE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorGetOutputColorSpace1")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputShaderUsage")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "BOOL *", "pShaderUsage")
FUNC_END(ctx, "VideoProcessorGetOutputShaderUsage")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamColorSpace1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "ColorSpace")
FUNC_END(ctx, "VideoProcessorSetStreamColorSpace1")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamMirror")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "BOOL", "Enable")
PARAM(ctx, "            _In_ ", "BOOL", "FlipHorizontal")
PARAM(ctx, "            _In_ ", "BOOL", "FlipVertical")
FUNC_END(ctx, "VideoProcessorSetStreamMirror")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamColorSpace1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "DXGI_COLOR_SPACE_TYPE *", "pColorSpace")
FUNC_END(ctx, "VideoProcessorGetStreamColorSpace1")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamMirror")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "BOOL *", "pEnable")
PARAM(ctx, "            _Out_ ", "BOOL *", "pFlipHorizontal")
PARAM(ctx, "            _Out_ ", "BOOL *", "pFlipVertical")
FUNC_END(ctx, "VideoProcessorGetStreamMirror")
FUNC_BEGIN(ctx, "VideoProcessorGetBehaviorHints")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "OutputWidth")
PARAM(ctx, "            _In_ ", "UINT", "OutputHeight")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "OutputFormat")
PARAM(ctx, "            _In_ ", "UINT", "StreamCount")
PARAM(ctx, "            _In_reads_(StreamCount) ", "const D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT *", "pStreams")
PARAM(ctx, "            _Out_ ", "UINT *", "pBehaviorHints")
FUNC_END(ctx, "VideoProcessorGetBehaviorHints")
CLASS_END(ctx, "ID3D11VideoContext1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoDevice1")
INHERITS(ctx, "ID3D11VideoDevice")
FUNC_BEGIN(ctx, "GetCryptoSessionPrivateDataSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID *", "pCryptoType")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _In_ ", "const GUID *", "pKeyExchangeType")
PARAM(ctx, "            _Out_ ", "UINT *", "pPrivateInputSize")
PARAM(ctx, "            _Out_ ", "UINT *", "pPrivateOutputSize")
FUNC_END(ctx, "GetCryptoSessionPrivateDataSize")
FUNC_BEGIN(ctx, "GetVideoDecoderCaps")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const GUID *", "pDecoderProfile")
PARAM(ctx, "            _In_ ", "UINT", "SampleWidth")
PARAM(ctx, "            _In_ ", "UINT", "SampleHeight")
PARAM(ctx, "            _In_ ", "const DXGI_RATIONAL *", "pFrameRate")
PARAM(ctx, "            _In_ ", "UINT", "BitRate")
PARAM(ctx, "            _In_opt_ ", "const GUID *", "pCryptoType")
PARAM(ctx, "            _Out_ ", "UINT *", "pDecoderCaps")
FUNC_END(ctx, "GetVideoDecoderCaps")
FUNC_BEGIN(ctx, "CheckVideoDecoderDownsampling")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_DESC *", "pInputDesc")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "InputColorSpace")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_CONFIG *", "pInputConfig")
PARAM(ctx, "            _In_ ", "const DXGI_RATIONAL *", "pFrameRate")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_SAMPLE_DESC *", "pOutputDesc")
PARAM(ctx, "            _Out_ ", "BOOL *", "pSupported")
PARAM(ctx, "            _Out_ ", "BOOL *", "pRealTimeHint")
FUNC_END(ctx, "CheckVideoDecoderDownsampling")
FUNC_BEGIN(ctx, "RecommendVideoDecoderDownsampleParameters")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_DESC *", "pInputDesc")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "InputColorSpace")
PARAM(ctx, "            _In_ ", "const D3D11_VIDEO_DECODER_CONFIG *", "pInputConfig")
PARAM(ctx, "            _In_ ", "const DXGI_RATIONAL *", "pFrameRate")
PARAM(ctx, "            _Out_ ", "D3D11_VIDEO_SAMPLE_DESC *", "pRecommendedOutputDesc")
FUNC_END(ctx, "RecommendVideoDecoderDownsampleParameters")
CLASS_END(ctx, "ID3D11VideoDevice1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoProcessorEnumerator1")
INHERITS(ctx, "ID3D11VideoProcessorEnumerator")
FUNC_BEGIN(ctx, "CheckVideoProcessorFormatConversion")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "InputFormat")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "InputColorSpace")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "OutputFormat")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "OutputColorSpace")
PARAM(ctx, "            _Out_ ", "BOOL *", "pSupported")
FUNC_END(ctx, "CheckVideoProcessorFormatConversion")
CLASS_END(ctx, "ID3D11VideoProcessorEnumerator1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device1")
INHERITS(ctx, "ID3D11Device")
FUNC_BEGIN(ctx, "GetImmediateContext1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11DeviceContext1 **", "ppImmediateContext")
FUNC_END(ctx, "GetImmediateContext1")
FUNC_BEGIN(ctx, "CreateDeferredContext1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "ContextFlags")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DeviceContext1 **", "ppDeferredContext")
FUNC_END(ctx, "CreateDeferredContext1")
FUNC_BEGIN(ctx, "CreateBlendState1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_BLEND_DESC1 *", "pBlendStateDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11BlendState1 **", "ppBlendState")
FUNC_END(ctx, "CreateBlendState1")
FUNC_BEGIN(ctx, "CreateRasterizerState1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_RASTERIZER_DESC1 *", "pRasterizerDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11RasterizerState1 **", "ppRasterizerState")
FUNC_END(ctx, "CreateRasterizerState1")
FUNC_BEGIN(ctx, "CreateDeviceContextState")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Flags")
PARAM(ctx, "            _In_reads_( FeatureLevels ) ", "const D3D_FEATURE_LEVEL *", "pFeatureLevels")
PARAM(ctx, "           ", "UINT", "FeatureLevels")
PARAM(ctx, "           ", "UINT", "SDKVersion")
PARAM(ctx, "           ", "const IID &", "EmulatedInterface")
PARAM(ctx, "            _Out_opt_ ", "D3D_FEATURE_LEVEL *", "pChosenFeatureLevel")
PARAM(ctx, "            _Out_opt_ ", "ID3DDeviceContextState **", "ppContextState")
FUNC_END(ctx, "CreateDeviceContextState")
FUNC_BEGIN(ctx, "OpenSharedResource1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hResource")
PARAM(ctx, "            _In_ ", "const IID &", "returnedInterface")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppResource")
FUNC_END(ctx, "OpenSharedResource1")
FUNC_BEGIN(ctx, "OpenSharedResourceByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "LPCWSTR", "lpName")
PARAM(ctx, "            _In_ ", "DWORD", "dwDesiredAccess")
PARAM(ctx, "            _In_ ", "const IID &", "returnedInterface")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppResource")
FUNC_END(ctx, "OpenSharedResourceByName")
CLASS_END(ctx, "ID3D11Device1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3DUserDefinedAnnotation")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "BeginEvent")
RETURN_TYPE(ctx, "INT")
PARAM(ctx, "            _In_ ", "LPCWSTR", "Name")
FUNC_END(ctx, "BeginEvent")
FUNC_BEGIN(ctx, "EndEvent")
RETURN_TYPE(ctx, "INT")
FUNC_END(ctx, "EndEvent")
FUNC_BEGIN(ctx, "SetMarker")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "LPCWSTR", "Name")
FUNC_END(ctx, "SetMarker")
FUNC_BEGIN(ctx, "GetStatus")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "GetStatus")
CLASS_END(ctx, "ID3DUserDefinedAnnotation")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "CreateDXGIFactory2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "HRESULT WINAPI CreateDXGIFactory2", "UINT", "Flags")
PARAM(ctx, "", "const IID &", "riid")
PARAM(ctx, " _COM_Outptr_", "void **", "ppFactory")
FUNC_END(ctx, "CreateDXGIFactory2")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "DXGIGetDebugInterface1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "HRESULT WINAPI DXGIGetDebugInterface1", "UINT", "Flags")
PARAM(ctx, "", "const IID &", "riid")
PARAM(ctx, " _COM_Outptr_", "void **", "pDebug")
FUNC_END(ctx, "DXGIGetDebugInterface1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDevice3")
INHERITS(ctx, "IDXGIDevice2")
FUNC_BEGIN(ctx, "Trim")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "Trim")
CLASS_END(ctx, "IDXGIDevice3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChain2")
INHERITS(ctx, "IDXGISwapChain1")
FUNC_BEGIN(ctx, "SetSourceSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Width")
PARAM(ctx, "           ", "UINT", "Height")
FUNC_END(ctx, "SetSourceSize")
FUNC_BEGIN(ctx, "GetSourceSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pWidth")
PARAM(ctx, "            _Out_ ", "UINT *", "pHeight")
FUNC_END(ctx, "GetSourceSize")
FUNC_BEGIN(ctx, "SetMaximumFrameLatency")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "MaxLatency")
FUNC_END(ctx, "SetMaximumFrameLatency")
FUNC_BEGIN(ctx, "GetMaximumFrameLatency")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pMaxLatency")
FUNC_END(ctx, "GetMaximumFrameLatency")
FUNC_BEGIN(ctx, "GetFrameLatencyWaitableObject")
RETURN_TYPE(ctx, "HANDLE")
FUNC_END(ctx, "GetFrameLatencyWaitableObject")
FUNC_BEGIN(ctx, "SetMatrixTransform")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "const DXGI_MATRIX_3X2_F *", "pMatrix")
FUNC_END(ctx, "SetMatrixTransform")
FUNC_BEGIN(ctx, "GetMatrixTransform")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_MATRIX_3X2_F *", "pMatrix")
FUNC_END(ctx, "GetMatrixTransform")
CLASS_END(ctx, "IDXGISwapChain2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput2")
INHERITS(ctx, "IDXGIOutput1")
FUNC_BEGIN(ctx, "SupportsOverlays")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "SupportsOverlays")
CLASS_END(ctx, "IDXGIOutput2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory3")
INHERITS(ctx, "IDXGIFactory2")
FUNC_BEGIN(ctx, "GetCreationFlags")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetCreationFlags")
CLASS_END(ctx, "IDXGIFactory3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDecodeSwapChain")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "PresentBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "BufferToPresent")
PARAM(ctx, "           ", "UINT", "SyncInterval")
PARAM(ctx, "           ", "UINT", "Flags")
FUNC_END(ctx, "PresentBuffer")
FUNC_BEGIN(ctx, "SetSourceRect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "const RECT *", "pRect")
FUNC_END(ctx, "SetSourceRect")
FUNC_BEGIN(ctx, "SetTargetRect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "const RECT *", "pRect")
FUNC_END(ctx, "SetTargetRect")
FUNC_BEGIN(ctx, "SetDestSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Width")
PARAM(ctx, "           ", "UINT", "Height")
FUNC_END(ctx, "SetDestSize")
FUNC_BEGIN(ctx, "GetSourceRect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "RECT *", "pRect")
FUNC_END(ctx, "GetSourceRect")
FUNC_BEGIN(ctx, "GetTargetRect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "RECT *", "pRect")
FUNC_END(ctx, "GetTargetRect")
FUNC_BEGIN(ctx, "GetDestSize")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "UINT *", "pWidth")
PARAM(ctx, "            _Out_ ", "UINT *", "pHeight")
FUNC_END(ctx, "GetDestSize")
FUNC_BEGIN(ctx, "SetColorSpace")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS", "ColorSpace")
FUNC_END(ctx, "SetColorSpace")
FUNC_BEGIN(ctx, "GetColorSpace")
RETURN_TYPE(ctx, "DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS")
FUNC_END(ctx, "GetColorSpace")
CLASS_END(ctx, "IDXGIDecodeSwapChain")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactoryMedia")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "CreateSwapChainForCompositionSurfaceHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_opt_ ", "HANDLE", "hSurface")
PARAM(ctx, "            _In_ ", "const DXGI_SWAP_CHAIN_DESC1 *", "pDesc")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pRestrictToOutput")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGISwapChain1 **", "ppSwapChain")
FUNC_END(ctx, "CreateSwapChainForCompositionSurfaceHandle")
FUNC_BEGIN(ctx, "CreateDecodeSwapChainForCompositionSurfaceHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            _In_opt_ ", "HANDLE", "hSurface")
PARAM(ctx, "            _In_ ", "DXGI_DECODE_SWAP_CHAIN_DESC *", "pDesc")
PARAM(ctx, "            _In_ ", "IDXGIResource *", "pYuvDecodeBuffers")
PARAM(ctx, "            _In_opt_ ", "IDXGIOutput *", "pRestrictToOutput")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIDecodeSwapChain **", "ppSwapChain")
FUNC_END(ctx, "CreateDecodeSwapChainForCompositionSurfaceHandle")
CLASS_END(ctx, "IDXGIFactoryMedia")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChainMedia")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "GetFrameStatisticsMedia")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _Out_ ", "DXGI_FRAME_STATISTICS_MEDIA *", "pStats")
FUNC_END(ctx, "GetFrameStatisticsMedia")
FUNC_BEGIN(ctx, "SetPresentDuration")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "Duration")
FUNC_END(ctx, "SetPresentDuration")
FUNC_BEGIN(ctx, "CheckPresentDurationSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "DesiredPresentDuration")
PARAM(ctx, "            _Out_ ", "UINT *", "pClosestSmallerPresentDuration")
PARAM(ctx, "            _Out_ ", "UINT *", "pClosestLargerPresentDuration")
FUNC_END(ctx, "CheckPresentDurationSupport")
CLASS_END(ctx, "IDXGISwapChainMedia")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput3")
INHERITS(ctx, "IDXGIOutput2")
FUNC_BEGIN(ctx, "CheckOverlaySupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "EnumFormat")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pConcernedDevice")
PARAM(ctx, "            _Out_ ", "UINT *", "pFlags")
FUNC_END(ctx, "CheckOverlaySupport")
CLASS_END(ctx, "IDXGIOutput3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceContext2")
INHERITS(ctx, "ID3D11DeviceContext1")
FUNC_BEGIN(ctx, "UpdateTileMappings")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pTiledResource")
PARAM(ctx, "            _In_ ", "UINT", "NumTiledResourceRegions")
PARAM(ctx, "            _In_reads_opt_(NumTiledResourceRegions) ", "const D3D11_TILED_RESOURCE_COORDINATE *", "pTiledResourceRegionStartCoordinates")
PARAM(ctx, "            _In_reads_opt_(NumTiledResourceRegions) ", "const D3D11_TILE_REGION_SIZE *", "pTiledResourceRegionSizes")
PARAM(ctx, "            _In_opt_ ", "ID3D11Buffer *", "pTilePool")
PARAM(ctx, "            _In_ ", "UINT", "NumRanges")
PARAM(ctx, "            _In_reads_opt_(NumRanges) ", "const UINT *", "pRangeFlags")
PARAM(ctx, "            _In_reads_opt_(NumRanges) ", "const UINT *", "pTilePoolStartOffsets")
PARAM(ctx, "            _In_reads_opt_(NumRanges) ", "const UINT *", "pRangeTileCounts")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
FUNC_END(ctx, "UpdateTileMappings")
FUNC_BEGIN(ctx, "CopyTileMappings")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDestTiledResource")
PARAM(ctx, "            _In_ ", "const D3D11_TILED_RESOURCE_COORDINATE *", "pDestRegionStartCoordinate")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSourceTiledResource")
PARAM(ctx, "            _In_ ", "const D3D11_TILED_RESOURCE_COORDINATE *", "pSourceRegionStartCoordinate")
PARAM(ctx, "            _In_ ", "const D3D11_TILE_REGION_SIZE *", "pTileRegionSize")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
FUNC_END(ctx, "CopyTileMappings")
FUNC_BEGIN(ctx, "CopyTiles")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pTiledResource")
PARAM(ctx, "            _In_ ", "const D3D11_TILED_RESOURCE_COORDINATE *", "pTileRegionStartCoordinate")
PARAM(ctx, "            _In_ ", "const D3D11_TILE_REGION_SIZE *", "pTileRegionSize")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pBuffer")
PARAM(ctx, "            _In_ ", "UINT64", "BufferStartOffsetInBytes")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
FUNC_END(ctx, "CopyTiles")
FUNC_BEGIN(ctx, "UpdateTiles")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDestTiledResource")
PARAM(ctx, "            _In_ ", "const D3D11_TILED_RESOURCE_COORDINATE *", "pDestTileRegionStartCoordinate")
PARAM(ctx, "            _In_ ", "const D3D11_TILE_REGION_SIZE *", "pDestTileRegionSize")
PARAM(ctx, "            _In_ ", "const void *", "pSourceTileData")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
FUNC_END(ctx, "UpdateTiles")
FUNC_BEGIN(ctx, "ResizeTilePool")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Buffer *", "pTilePool")
PARAM(ctx, "            _In_ ", "UINT64", "NewSizeInBytes")
FUNC_END(ctx, "ResizeTilePool")
FUNC_BEGIN(ctx, "TiledResourceBarrier")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_opt_ ", "struct ID3D11DeviceChild *", "pTiledResourceOrViewAccessBeforeBarrier")
PARAM(ctx, "            _In_opt_ ", "struct ID3D11DeviceChild *", "pTiledResourceOrViewAccessAfterBarrier")
FUNC_END(ctx, "TiledResourceBarrier")
FUNC_BEGIN(ctx, "IsAnnotationEnabled")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsAnnotationEnabled")
FUNC_BEGIN(ctx, "SetMarkerInt")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "LPCWSTR", "pLabel")
PARAM(ctx, "           ", "INT", "Data")
FUNC_END(ctx, "SetMarkerInt")
FUNC_BEGIN(ctx, "BeginEventInt")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "LPCWSTR", "pLabel")
PARAM(ctx, "           ", "INT", "Data")
FUNC_END(ctx, "BeginEventInt")
FUNC_BEGIN(ctx, "EndEvent")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "EndEvent")
CLASS_END(ctx, "ID3D11DeviceContext2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device2")
INHERITS(ctx, "ID3D11Device1")
FUNC_BEGIN(ctx, "GetImmediateContext2")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11DeviceContext2 **", "ppImmediateContext")
FUNC_END(ctx, "GetImmediateContext2")
FUNC_BEGIN(ctx, "CreateDeferredContext2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "ContextFlags")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DeviceContext2 **", "ppDeferredContext")
FUNC_END(ctx, "CreateDeferredContext2")
FUNC_BEGIN(ctx, "GetResourceTiling")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pTiledResource")
PARAM(ctx, "            _Out_opt_ ", "UINT *", "pNumTilesForEntireResource")
PARAM(ctx, "            _Out_opt_ ", "D3D11_PACKED_MIP_DESC *", "pPackedMipDesc")
PARAM(ctx, "            _Out_opt_ ", "D3D11_TILE_SHAPE *", "pStandardTileShapeForNonPackedMips")
PARAM(ctx, "            _Inout_opt_ ", "UINT *", "pNumSubresourceTilings")
PARAM(ctx, "            _In_ ", "UINT", "FirstSubresourceTilingToGet")
PARAM(ctx, "            _Out_writes_(*pNumSubresourceTilings) ", "D3D11_SUBRESOURCE_TILING *", "pSubresourceTilingsForNonPackedMips")
FUNC_END(ctx, "GetResourceTiling")
FUNC_BEGIN(ctx, "CheckMultisampleQualityLevels1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "UINT", "SampleCount")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
PARAM(ctx, "            _Out_ ", "UINT *", "pNumQualityLevels")
FUNC_END(ctx, "CheckMultisampleQualityLevels1")
CLASS_END(ctx, "ID3D11Device2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Texture2D1")
INHERITS(ctx, "ID3D11Texture2D")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_TEXTURE2D_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11Texture2D1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Texture3D1")
INHERITS(ctx, "ID3D11Texture3D")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_TEXTURE3D_DESC1 *", "pDesc")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11Texture3D1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RasterizerState2")
INHERITS(ctx, "ID3D11RasterizerState1")
FUNC_BEGIN(ctx, "GetDesc2")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RASTERIZER_DESC2 *", "pDesc")
FUNC_END(ctx, "GetDesc2")
CLASS_END(ctx, "ID3D11RasterizerState2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderResourceView1")
INHERITS(ctx, "ID3D11ShaderResourceView")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_SHADER_RESOURCE_VIEW_DESC1 *", "pDesc1")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11ShaderResourceView1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11RenderTargetView1")
INHERITS(ctx, "ID3D11RenderTargetView")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_RENDER_TARGET_VIEW_DESC1 *", "pDesc1")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11RenderTargetView1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11UnorderedAccessView1")
INHERITS(ctx, "ID3D11UnorderedAccessView")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_UNORDERED_ACCESS_VIEW_DESC1 *", "pDesc1")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11UnorderedAccessView1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Query1")
INHERITS(ctx, "ID3D11Query")
FUNC_BEGIN(ctx, "GetDesc1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "D3D11_QUERY_DESC1 *", "pDesc1")
FUNC_END(ctx, "GetDesc1")
CLASS_END(ctx, "ID3D11Query1")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceContext3")
INHERITS(ctx, "ID3D11DeviceContext2")
FUNC_BEGIN(ctx, "Flush1")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "           ", "D3D11_CONTEXT_TYPE", "ContextType")
PARAM(ctx, "            _In_opt_ ", "HANDLE", "hEvent")
FUNC_END(ctx, "Flush1")
FUNC_BEGIN(ctx, "SetHardwareProtectionState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "BOOL", "HwProtectionEnable")
FUNC_END(ctx, "SetHardwareProtectionState")
FUNC_BEGIN(ctx, "GetHardwareProtectionState")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "BOOL *", "pHwProtectionEnable")
FUNC_END(ctx, "GetHardwareProtectionState")
CLASS_END(ctx, "ID3D11DeviceContext3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Fence")
INHERITS(ctx, "ID3D11DeviceChild")
FUNC_BEGIN(ctx, "CreateSharedHandle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_opt_ ", "const SECURITY_ATTRIBUTES *", "pAttributes")
PARAM(ctx, "            _In_ ", "DWORD", "dwAccess")
PARAM(ctx, "            _In_opt_ ", "LPCWSTR", "lpName")
PARAM(ctx, "            _Out_ ", "HANDLE *", "pHandle")
FUNC_END(ctx, "CreateSharedHandle")
FUNC_BEGIN(ctx, "GetCompletedValue")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetCompletedValue")
FUNC_BEGIN(ctx, "SetEventOnCompletion")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT64", "Value")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
FUNC_END(ctx, "SetEventOnCompletion")
CLASS_END(ctx, "ID3D11Fence")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11DeviceContext4")
INHERITS(ctx, "ID3D11DeviceContext3")
FUNC_BEGIN(ctx, "Signal")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Fence *", "pFence")
PARAM(ctx, "            _In_ ", "UINT64", "Value")
FUNC_END(ctx, "Signal")
FUNC_BEGIN(ctx, "Wait")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Fence *", "pFence")
PARAM(ctx, "            _In_ ", "UINT64", "Value")
FUNC_END(ctx, "Wait")
CLASS_END(ctx, "ID3D11DeviceContext4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device3")
INHERITS(ctx, "ID3D11Device2")
FUNC_BEGIN(ctx, "CreateTexture2D1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_TEXTURE2D_DESC1 *", "pDesc1")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDesc1->MipLevels * pDesc1->ArraySize)) ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Texture2D1 **", "ppTexture2D")
FUNC_END(ctx, "CreateTexture2D1")
FUNC_BEGIN(ctx, "CreateTexture3D1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_TEXTURE3D_DESC1 *", "pDesc1")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDesc1->MipLevels)) ", "const D3D11_SUBRESOURCE_DATA *", "pInitialData")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Texture3D1 **", "ppTexture3D")
FUNC_END(ctx, "CreateTexture3D1")
FUNC_BEGIN(ctx, "CreateRasterizerState2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_RASTERIZER_DESC2 *", "pRasterizerDesc")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11RasterizerState2 **", "ppRasterizerState")
FUNC_END(ctx, "CreateRasterizerState2")
FUNC_BEGIN(ctx, "CreateShaderResourceView1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_SHADER_RESOURCE_VIEW_DESC1 *", "pDesc1")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11ShaderResourceView1 **", "ppSRView1")
FUNC_END(ctx, "CreateShaderResourceView1")
FUNC_BEGIN(ctx, "CreateUnorderedAccessView1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_UNORDERED_ACCESS_VIEW_DESC1 *", "pDesc1")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11UnorderedAccessView1 **", "ppUAView1")
FUNC_END(ctx, "CreateUnorderedAccessView1")
FUNC_BEGIN(ctx, "CreateRenderTargetView1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pResource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_RENDER_TARGET_VIEW_DESC1 *", "pDesc1")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11RenderTargetView1 **", "ppRTView1")
FUNC_END(ctx, "CreateRenderTargetView1")
FUNC_BEGIN(ctx, "CreateQuery1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const D3D11_QUERY_DESC1 *", "pQueryDesc1")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11Query1 **", "ppQuery1")
FUNC_END(ctx, "CreateQuery1")
FUNC_BEGIN(ctx, "GetImmediateContext3")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Outptr_ ", "ID3D11DeviceContext3 **", "ppImmediateContext")
FUNC_END(ctx, "GetImmediateContext3")
FUNC_BEGIN(ctx, "CreateDeferredContext3")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "UINT", "ContextFlags")
PARAM(ctx, "            _COM_Outptr_opt_ ", "ID3D11DeviceContext3 **", "ppDeferredContext")
FUNC_END(ctx, "CreateDeferredContext3")
FUNC_BEGIN(ctx, "WriteToSubresource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pDstResource")
PARAM(ctx, "            _In_ ", "UINT", "DstSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pDstBox")
PARAM(ctx, "            _In_ ", "const void *", "pSrcData")
PARAM(ctx, "            _In_ ", "UINT", "SrcRowPitch")
PARAM(ctx, "            _In_ ", "UINT", "SrcDepthPitch")
FUNC_END(ctx, "WriteToSubresource")
FUNC_BEGIN(ctx, "ReadFromSubresource")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _Out_ ", "void *", "pDstData")
PARAM(ctx, "            _In_ ", "UINT", "DstRowPitch")
PARAM(ctx, "            _In_ ", "UINT", "DstDepthPitch")
PARAM(ctx, "            _In_ ", "ID3D11Resource *", "pSrcResource")
PARAM(ctx, "            _In_ ", "UINT", "SrcSubresource")
PARAM(ctx, "            _In_opt_ ", "const D3D11_BOX *", "pSrcBox")
FUNC_END(ctx, "ReadFromSubresource")
CLASS_END(ctx, "ID3D11Device3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChain3")
INHERITS(ctx, "IDXGISwapChain2")
FUNC_BEGIN(ctx, "GetCurrentBackBufferIndex")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetCurrentBackBufferIndex")
FUNC_BEGIN(ctx, "CheckColorSpaceSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "ColorSpace")
PARAM(ctx, "            _Out_ ", "UINT *", "pColorSpaceSupport")
FUNC_END(ctx, "CheckColorSpaceSupport")
FUNC_BEGIN(ctx, "SetColorSpace1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "ColorSpace")
FUNC_END(ctx, "SetColorSpace1")
FUNC_BEGIN(ctx, "ResizeBuffers1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "BufferCount")
PARAM(ctx, "            _In_ ", "UINT", "Width")
PARAM(ctx, "            _In_ ", "UINT", "Height")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "UINT", "SwapChainFlags")
PARAM(ctx, "            _In_reads_(BufferCount) ", "const UINT *", "pCreationNodeMask")
PARAM(ctx, "            _In_reads_(BufferCount) ", "struct IUnknown *const *", "ppPresentQueue")
FUNC_END(ctx, "ResizeBuffers1")
CLASS_END(ctx, "IDXGISwapChain3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput4")
INHERITS(ctx, "IDXGIOutput3")
FUNC_BEGIN(ctx, "CheckOverlayColorSpaceSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_FORMAT", "Format")
PARAM(ctx, "            _In_ ", "DXGI_COLOR_SPACE_TYPE", "ColorSpace")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pConcernedDevice")
PARAM(ctx, "            _Out_ ", "UINT *", "pFlags")
FUNC_END(ctx, "CheckOverlayColorSpaceSupport")
CLASS_END(ctx, "IDXGIOutput4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory4")
INHERITS(ctx, "IDXGIFactory3")
FUNC_BEGIN(ctx, "EnumAdapterByLuid")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "LUID", "AdapterLuid")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppvAdapter")
FUNC_END(ctx, "EnumAdapterByLuid")
FUNC_BEGIN(ctx, "EnumWarpAdapter")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "const IID &", "riid")
PARAM(ctx, "            _COM_Outptr_ ", "void **", "ppvAdapter")
FUNC_END(ctx, "EnumWarpAdapter")
CLASS_END(ctx, "IDXGIFactory4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIAdapter3")
INHERITS(ctx, "IDXGIAdapter2")
FUNC_BEGIN(ctx, "RegisterHardwareContentProtectionTeardownStatusEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterHardwareContentProtectionTeardownStatusEvent")
FUNC_BEGIN(ctx, "UnregisterHardwareContentProtectionTeardownStatus")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "DWORD", "dwCookie")
FUNC_END(ctx, "UnregisterHardwareContentProtectionTeardownStatus")
FUNC_BEGIN(ctx, "QueryVideoMemoryInfo")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NodeIndex")
PARAM(ctx, "            _In_ ", "DXGI_MEMORY_SEGMENT_GROUP", "MemorySegmentGroup")
PARAM(ctx, "            _Out_ ", "DXGI_QUERY_VIDEO_MEMORY_INFO *", "pVideoMemoryInfo")
FUNC_END(ctx, "QueryVideoMemoryInfo")
FUNC_BEGIN(ctx, "SetVideoMemoryReservation")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NodeIndex")
PARAM(ctx, "            _In_ ", "DXGI_MEMORY_SEGMENT_GROUP", "MemorySegmentGroup")
PARAM(ctx, "            _In_ ", "UINT64", "Reservation")
FUNC_END(ctx, "SetVideoMemoryReservation")
FUNC_BEGIN(ctx, "RegisterVideoMemoryBudgetChangeNotificationEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterVideoMemoryBudgetChangeNotificationEvent")
FUNC_BEGIN(ctx, "UnregisterVideoMemoryBudgetChangeNotification")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "DWORD", "dwCookie")
FUNC_END(ctx, "UnregisterVideoMemoryBudgetChangeNotification")
CLASS_END(ctx, "IDXGIAdapter3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIOutput5")
INHERITS(ctx, "IDXGIOutput4")
FUNC_BEGIN(ctx, "DuplicateOutput1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "struct IUnknown *", "pDevice")
PARAM(ctx, "            /* [in] */", "UINT", "Flags")
PARAM(ctx, "            _In_ ", "UINT", "SupportedFormatsCount")
PARAM(ctx, "            _In_reads_(SupportedFormatsCount) ", "const DXGI_FORMAT *", "pSupportedFormats")
PARAM(ctx, "            _COM_Outptr_ ", "IDXGIOutputDuplication **", "ppOutputDuplication")
FUNC_END(ctx, "DuplicateOutput1")
CLASS_END(ctx, "IDXGIOutput5")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGISwapChain4")
INHERITS(ctx, "IDXGISwapChain3")
FUNC_BEGIN(ctx, "SetHDRMetaData")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "DXGI_HDR_METADATA_TYPE", "Type")
PARAM(ctx, "            _In_ ", "UINT", "Size")
PARAM(ctx, "            _In_reads_opt_(Size) ", "void *", "pMetaData")
FUNC_END(ctx, "SetHDRMetaData")
CLASS_END(ctx, "IDXGISwapChain4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIDevice4")
INHERITS(ctx, "IDXGIDevice3")
FUNC_BEGIN(ctx, "OfferResources1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NumResources")
PARAM(ctx, "            _In_reads_(NumResources) ", "IDXGIResource *const *", "ppResources")
PARAM(ctx, "            _In_ ", "DXGI_OFFER_RESOURCE_PRIORITY", "Priority")
PARAM(ctx, "            _In_ ", "UINT", "Flags")
FUNC_END(ctx, "OfferResources1")
FUNC_BEGIN(ctx, "ReclaimResources1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT", "NumResources")
PARAM(ctx, "            _In_reads_(NumResources) ", "IDXGIResource *const *", "ppResources")
PARAM(ctx, "            _Out_writes_all_(NumResources) ", "DXGI_RECLAIM_RESOURCE_RESULTS *", "pResults")
FUNC_END(ctx, "ReclaimResources1")
CLASS_END(ctx, "IDXGIDevice4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "IDXGIFactory5")
INHERITS(ctx, "IDXGIFactory4")
FUNC_BEGIN(ctx, "CheckFeatureSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "DXGI_FEATURE", "Feature")
PARAM(ctx, "            _Inout_updates_bytes_(FeatureSupportDataSize) ", "void *", "pFeatureSupportData")
PARAM(ctx, "           ", "UINT", "FeatureSupportDataSize")
FUNC_END(ctx, "CheckFeatureSupport")
CLASS_END(ctx, "IDXGIFactory5")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device4")
INHERITS(ctx, "ID3D11Device3")
FUNC_BEGIN(ctx, "RegisterDeviceRemovedEvent")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hEvent")
PARAM(ctx, "            _Out_ ", "DWORD *", "pdwCookie")
FUNC_END(ctx, "RegisterDeviceRemovedEvent")
FUNC_BEGIN(ctx, "UnregisterDeviceRemoved")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "DWORD", "dwCookie")
FUNC_END(ctx, "UnregisterDeviceRemoved")
CLASS_END(ctx, "ID3D11Device4")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Device5")
INHERITS(ctx, "ID3D11Device4")
FUNC_BEGIN(ctx, "OpenSharedFence")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "HANDLE", "hFence")
PARAM(ctx, "            _In_ ", "const IID &", "ReturnedInterface")
PARAM(ctx, "            _COM_Outptr_opt_ ", "void **", "ppFence")
FUNC_END(ctx, "OpenSharedFence")
FUNC_BEGIN(ctx, "CreateFence")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "UINT64", "InitialValue")
PARAM(ctx, "            _In_ ", "D3D11_FENCE_FLAG", "Flags")
PARAM(ctx, "            _In_ ", "const IID &", "ReturnedInterface")
PARAM(ctx, "            _COM_Outptr_opt_ ", "void **", "ppFence")
FUNC_END(ctx, "CreateFence")
CLASS_END(ctx, "ID3D11Device5")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Multithread")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "Enter")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "Enter")
FUNC_BEGIN(ctx, "Leave")
RETURN_TYPE(ctx, "void")
FUNC_END(ctx, "Leave")
FUNC_BEGIN(ctx, "SetMultithreadProtected")
RETURN_TYPE(ctx, "BOOL")
PARAM(ctx, "            _In_ ", "BOOL", "bMTProtect")
FUNC_END(ctx, "SetMultithreadProtected")
FUNC_BEGIN(ctx, "GetMultithreadProtected")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "GetMultithreadProtected")
CLASS_END(ctx, "ID3D11Multithread")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoContext2")
INHERITS(ctx, "ID3D11VideoContext1")
FUNC_BEGIN(ctx, "VideoProcessorSetOutputHDRMetaData")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "DXGI_HDR_METADATA_TYPE", "Type")
PARAM(ctx, "            _In_ ", "UINT", "Size")
PARAM(ctx, "            _In_reads_bytes_opt_(Size) ", "const void *", "pHDRMetaData")
FUNC_END(ctx, "VideoProcessorSetOutputHDRMetaData")
FUNC_BEGIN(ctx, "VideoProcessorGetOutputHDRMetaData")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _Out_ ", "DXGI_HDR_METADATA_TYPE *", "pType")
PARAM(ctx, "            _In_ ", "UINT", "Size")
PARAM(ctx, "            _Out_writes_bytes_opt_(Size) ", "void *", "pMetaData")
FUNC_END(ctx, "VideoProcessorGetOutputHDRMetaData")
FUNC_BEGIN(ctx, "VideoProcessorSetStreamHDRMetaData")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _In_ ", "DXGI_HDR_METADATA_TYPE", "Type")
PARAM(ctx, "            _In_ ", "UINT", "Size")
PARAM(ctx, "            _In_reads_bytes_opt_(Size) ", "const void *", "pHDRMetaData")
FUNC_END(ctx, "VideoProcessorSetStreamHDRMetaData")
FUNC_BEGIN(ctx, "VideoProcessorGetStreamHDRMetaData")
RETURN_TYPE(ctx, "void")
PARAM(ctx, "            _In_ ", "ID3D11VideoProcessor *", "pVideoProcessor")
PARAM(ctx, "            _In_ ", "UINT", "StreamIndex")
PARAM(ctx, "            _Out_ ", "DXGI_HDR_METADATA_TYPE *", "pType")
PARAM(ctx, "            _In_ ", "UINT", "Size")
PARAM(ctx, "            _Out_writes_bytes_opt_(Size) ", "void *", "pMetaData")
FUNC_END(ctx, "VideoProcessorGetStreamHDRMetaData")
CLASS_END(ctx, "ID3D11VideoContext2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoDevice2")
INHERITS(ctx, "ID3D11VideoDevice1")
FUNC_BEGIN(ctx, "CheckFeatureSupport")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "           ", "D3D11_FEATURE_VIDEO", "Feature")
PARAM(ctx, "            _Out_writes_bytes_(FeatureSupportDataSize) ", "void *", "pFeatureSupportData")
PARAM(ctx, "           ", "UINT", "FeatureSupportDataSize")
FUNC_END(ctx, "CheckFeatureSupport")
FUNC_BEGIN(ctx, "NegotiateCryptoSessionKeyExchangeMT")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11CryptoSession *", "pCryptoSession")
PARAM(ctx, "            _In_ ", "D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS", "flags")
PARAM(ctx, "            _In_ ", "UINT", "DataSize")
PARAM(ctx, "            _Inout_updates_bytes_(DataSize) ", "void *", "pData")
FUNC_END(ctx, "NegotiateCryptoSessionKeyExchangeMT")
CLASS_END(ctx, "ID3D11VideoDevice2")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11VideoContext3")
INHERITS(ctx, "ID3D11VideoContext2")
FUNC_BEGIN(ctx, "DecoderBeginFrame1")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoderOutputView *", "pView")
PARAM(ctx, "           ", "UINT", "ContentKeySize")
PARAM(ctx, "            _In_reads_bytes_opt_(ContentKeySize) ", "const void *", "pContentKey")
PARAM(ctx, " D3D11_4_VIDEO_DECODER_MAX_HISTOGRAM_COMPONENTS) ", "UINT", "NumComponentHistograms")
PARAM(ctx, "            _In_reads_opt_(NumComponentHistograms) ", "const UINT *", "pHistogramOffsets")
PARAM(ctx, "            _In_reads_opt_(NumComponentHistograms) ", "ID3D11Buffer *const *", "ppHistogramBuffers")
FUNC_END(ctx, "DecoderBeginFrame1")
FUNC_BEGIN(ctx, "SubmitDecoderBuffers2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "            _In_ ", "ID3D11VideoDecoder *", "pDecoder")
PARAM(ctx, "            _In_ ", "UINT", "NumBuffers")
PARAM(ctx, "            _In_reads_(NumBuffers) ", "const D3D11_VIDEO_DECODER_BUFFER_DESC2 *", "pBufferDesc")
FUNC_END(ctx, "SubmitDecoderBuffers2")
CLASS_END(ctx, "ID3D11VideoContext3")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderReflectionType")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_SHADER_TYPE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetMemberTypeByIndex")
RETURN_TYPE(ctx, "struct ID3D11ShaderReflectionType *")
PARAM(ctx, " GetMemberTypeByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetMemberTypeByIndex")
FUNC_BEGIN(ctx, "GetMemberTypeByName")
RETURN_TYPE(ctx, "struct ID3D11ShaderReflectionType *")
PARAM(ctx, " GetMemberTypeByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetMemberTypeByName")
FUNC_BEGIN(ctx, "GetMemberTypeName")
RETURN_TYPE(ctx, "LPCSTR")
PARAM(ctx, " GetMemberTypeName)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetMemberTypeName")
FUNC_BEGIN(ctx, "IsEqual")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(IsEqual)(THIS_ _In_", "struct ID3D11ShaderReflectionType *", "pType")
FUNC_END(ctx, "IsEqual")
FUNC_BEGIN(ctx, "GetSubType")
RETURN_TYPE(ctx, "struct ID3D11ShaderReflectionType *")
FUNC_END(ctx, "GetSubType")
FUNC_BEGIN(ctx, "GetBaseClass")
RETURN_TYPE(ctx, "struct ID3D11ShaderReflectionType *")
FUNC_END(ctx, "GetBaseClass")
FUNC_BEGIN(ctx, "GetNumInterfaces")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetNumInterfaces")
FUNC_BEGIN(ctx, "GetInterfaceByIndex")
RETURN_TYPE(ctx, "struct ID3D11ShaderReflectionType *")
PARAM(ctx, " GetInterfaceByIndex)(THIS_ _In_", "UINT", "uIndex")
FUNC_END(ctx, "GetInterfaceByIndex")
FUNC_BEGIN(ctx, "IsOfType")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(IsOfType)(THIS_ _In_", "struct ID3D11ShaderReflectionType *", "pType")
FUNC_END(ctx, "IsOfType")
FUNC_BEGIN(ctx, "ImplementsInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(ImplementsInterface)(THIS_ _In_", "struct ID3D11ShaderReflectionType *", "pBase")
FUNC_END(ctx, "ImplementsInterface")
CLASS_END(ctx, "ID3D11ShaderReflectionType")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderReflectionVariable")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_SHADER_VARIABLE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetType")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionType *")
FUNC_END(ctx, "GetType")
FUNC_BEGIN(ctx, "GetBuffer")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionConstantBuffer *")
FUNC_END(ctx, "GetBuffer")
FUNC_BEGIN(ctx, "GetInterfaceSlot")
RETURN_TYPE(ctx, "UINT")
PARAM(ctx, " GetInterfaceSlot)(THIS_ _In_", "UINT", "uArrayIndex")
FUNC_END(ctx, "GetInterfaceSlot")
CLASS_END(ctx, "ID3D11ShaderReflectionVariable")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderReflectionConstantBuffer")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_", "D3D11_SHADER_BUFFER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetVariableByIndex")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetVariableByIndex")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
CLASS_END(ctx, "ID3D11ShaderReflectionConstantBuffer")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ShaderReflection")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, "                              _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_SHADER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetConstantBufferByIndex")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetConstantBufferByIndex")
FUNC_BEGIN(ctx, "GetConstantBufferByName")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetConstantBufferByName")
FUNC_BEGIN(ctx, "GetResourceBindingDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDesc)(THIS_ _In_", "UINT", "ResourceIndex")
PARAM(ctx, "                                      _Out_", "D3D11_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDesc")
FUNC_BEGIN(ctx, "GetInputParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetInputParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                     _Out_", "D3D11_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetInputParameterDesc")
FUNC_BEGIN(ctx, "GetOutputParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetOutputParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                      _Out_", "D3D11_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetOutputParameterDesc")
FUNC_BEGIN(ctx, "GetPatchConstantParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetPatchConstantParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                             _Out_", "D3D11_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetPatchConstantParameterDesc")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
FUNC_BEGIN(ctx, "GetResourceBindingDescByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDescByName)(THIS_ _In_", "LPCSTR", "Name")
PARAM(ctx, "                                            _Out_", "D3D11_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDescByName")
FUNC_BEGIN(ctx, "GetMovInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetMovInstructionCount")
FUNC_BEGIN(ctx, "GetMovcInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetMovcInstructionCount")
FUNC_BEGIN(ctx, "GetConversionInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetConversionInstructionCount")
FUNC_BEGIN(ctx, "GetBitwiseInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetBitwiseInstructionCount")
FUNC_BEGIN(ctx, "GetGSInputPrimitive")
RETURN_TYPE(ctx, "D3D_PRIMITIVE")
FUNC_END(ctx, "GetGSInputPrimitive")
FUNC_BEGIN(ctx, "IsSampleFrequencyShader")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsSampleFrequencyShader")
FUNC_BEGIN(ctx, "GetNumInterfaceSlots")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetNumInterfaceSlots")
FUNC_BEGIN(ctx, "GetMinFeatureLevel")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetMinFeatureLevel)(THIS_ _Out_", "enum D3D_FEATURE_LEVEL *", "pLevel")
FUNC_END(ctx, "GetMinFeatureLevel")
FUNC_BEGIN(ctx, "GetThreadGroupSize")
RETURN_TYPE(ctx, "UINT")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeX")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeY")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeZ")
FUNC_END(ctx, "GetThreadGroupSize")
FUNC_BEGIN(ctx, "GetRequiresFlags")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetRequiresFlags")
CLASS_END(ctx, "ID3D11ShaderReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11LibraryReflection")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_LIBRARY_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetFunctionByIndex")
RETURN_TYPE(ctx, "ID3D11FunctionReflection *")
PARAM(ctx, " GetFunctionByIndex)(THIS_ _In_", "INT", "FunctionIndex")
FUNC_END(ctx, "GetFunctionByIndex")
CLASS_END(ctx, "ID3D11LibraryReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11FunctionReflection")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_FUNCTION_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetConstantBufferByIndex")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByIndex)(THIS_ _In_", "UINT", "BufferIndex")
FUNC_END(ctx, "GetConstantBufferByIndex")
FUNC_BEGIN(ctx, "GetConstantBufferByName")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetConstantBufferByName")
FUNC_BEGIN(ctx, "GetResourceBindingDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDesc)(THIS_ _In_", "UINT", "ResourceIndex")
PARAM(ctx, "                                      _Out_", "D3D11_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDesc")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D11ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
FUNC_BEGIN(ctx, "GetResourceBindingDescByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDescByName)(THIS_ _In_", "LPCSTR", "Name")
PARAM(ctx, "                                            _Out_", "D3D11_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDescByName")
FUNC_BEGIN(ctx, "GetFunctionParameter")
RETURN_TYPE(ctx, "ID3D11FunctionParameterReflection *")
PARAM(ctx, " GetFunctionParameter)(THIS_ _In_", "INT", "ParameterIndex")
FUNC_END(ctx, "GetFunctionParameter")
CLASS_END(ctx, "ID3D11FunctionReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11FunctionParameterReflection")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D11_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D11FunctionParameterReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Module")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "CreateInstance")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(CreateInstance)(THIS_ _In_opt_", "LPCSTR", "pNamespace")
PARAM(ctx, "                                    _COM_Outptr_", "struct ID3D11ModuleInstance **", "ppModuleInstance")
FUNC_END(ctx, "CreateInstance")
CLASS_END(ctx, "ID3D11Module")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11ModuleInstance")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "BindConstantBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindConstantBuffer)(THIS_ _In_", "UINT", "uSrcSlot")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "cbDstOffset")
FUNC_END(ctx, "BindConstantBuffer")
FUNC_BEGIN(ctx, "BindConstantBufferByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindConstantBufferByName)(THIS_ _In_", "LPCSTR", "pName")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "cbDstOffset")
FUNC_END(ctx, "BindConstantBufferByName")
FUNC_BEGIN(ctx, "BindResource")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindResource)(THIS_ _In_", "UINT", "uSrcSlot")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindResource")
FUNC_BEGIN(ctx, "BindResourceByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindResourceByName)(THIS_ _In_", "LPCSTR", "pName")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindResourceByName")
FUNC_BEGIN(ctx, "BindSampler")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindSampler)(THIS_ _In_", "UINT", "uSrcSlot")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindSampler")
FUNC_BEGIN(ctx, "BindSamplerByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindSamplerByName)(THIS_ _In_", "LPCSTR", "pName")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindSamplerByName")
FUNC_BEGIN(ctx, "BindUnorderedAccessView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindUnorderedAccessView)(THIS_ _In_", "UINT", "uSrcSlot")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindUnorderedAccessView")
FUNC_BEGIN(ctx, "BindUnorderedAccessViewByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindUnorderedAccessViewByName)(THIS_ _In_", "LPCSTR", "pName")
PARAM(ctx, " _In_", "UINT", "uDstSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindUnorderedAccessViewByName")
FUNC_BEGIN(ctx, "BindResourceAsUnorderedAccessView")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindResourceAsUnorderedAccessView)(THIS_ _In_", "UINT", "uSrcSrvSlot")
PARAM(ctx, " _In_", "UINT", "uDstUavSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindResourceAsUnorderedAccessView")
FUNC_BEGIN(ctx, "BindResourceAsUnorderedAccessViewByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(BindResourceAsUnorderedAccessViewByName)(THIS_ _In_", "LPCSTR", "pSrvName")
PARAM(ctx, " _In_", "UINT", "uDstUavSlot")
PARAM(ctx, " _In_", "UINT", "uCount")
FUNC_END(ctx, "BindResourceAsUnorderedAccessViewByName")
CLASS_END(ctx, "ID3D11ModuleInstance")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11Linker")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "Link")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(Link)(THIS_ _In_", "struct ID3D11ModuleInstance *", "pEntry")
PARAM(ctx, "                          _In_", "LPCSTR", "pEntryName")
PARAM(ctx, "                          _In_", "LPCSTR", "pTargetName")
PARAM(ctx, "                          _In_", "UINT", "uFlags")
PARAM(ctx, "                          _COM_Outptr_", "ID3DBlob **", "ppShaderBlob")
PARAM(ctx, "                          _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorBuffer")
FUNC_END(ctx, "Link")
FUNC_BEGIN(ctx, "UseLibrary")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(UseLibrary)(THIS_ _In_", "struct ID3D11ModuleInstance *", "pLibraryMI")
FUNC_END(ctx, "UseLibrary")
FUNC_BEGIN(ctx, "AddClipPlaneFromCBuffer")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(AddClipPlaneFromCBuffer)(THIS_ _In_", "UINT", "uCBufferSlot")
PARAM(ctx, " _In_", "UINT", "uCBufferEntry")
FUNC_END(ctx, "AddClipPlaneFromCBuffer")
CLASS_END(ctx, "ID3D11Linker")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11LinkingNode")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
CLASS_END(ctx, "ID3D11LinkingNode")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D11FunctionLinkingGraph")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "CreateModuleInstance")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(CreateModuleInstance)(THIS_ _COM_Outptr_", "struct ID3D11ModuleInstance **", "ppModuleInstance")
PARAM(ctx, "                                          _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorBuffer")
FUNC_END(ctx, "CreateModuleInstance")
FUNC_BEGIN(ctx, "SetInputSignature")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(SetInputSignature)(THIS_ __in_ecount(cInputParameters)", "const D3D11_PARAMETER_DESC *", "pInputParameters")
PARAM(ctx, "                                       _In_", "UINT", "cInputParameters")
PARAM(ctx, "                                       _COM_Outptr_", "struct ID3D11LinkingNode **", "ppInputNode")
FUNC_END(ctx, "SetInputSignature")
FUNC_BEGIN(ctx, "SetOutputSignature")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(SetOutputSignature)(THIS_ __in_ecount(cOutputParameters)", "const D3D11_PARAMETER_DESC *", "pOutputParameters")
PARAM(ctx, "                                        _In_", "UINT", "cOutputParameters")
PARAM(ctx, "                                        _COM_Outptr_", "struct ID3D11LinkingNode **", "ppOutputNode")
FUNC_END(ctx, "SetOutputSignature")
FUNC_BEGIN(ctx, "CallFunction")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(CallFunction)(THIS_ _In_opt_", "LPCSTR", "pModuleInstanceNamespace")
PARAM(ctx, "                                  _In_", "struct ID3D11Module *", "pModuleWithFunctionPrototype")
PARAM(ctx, "                                  _In_", "LPCSTR", "pFunctionName")
PARAM(ctx, "                                  _COM_Outptr_", "struct ID3D11LinkingNode **", "ppCallNode")
FUNC_END(ctx, "CallFunction")
FUNC_BEGIN(ctx, "PassValue")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(PassValue)(THIS_ _In_", "struct ID3D11LinkingNode *", "pSrcNode")
PARAM(ctx, "                               _In_", "INT", "SrcParameterIndex")
PARAM(ctx, "                               _In_", "struct ID3D11LinkingNode *", "pDstNode")
PARAM(ctx, "                               _In_", "INT", "DstParameterIndex")
FUNC_END(ctx, "PassValue")
FUNC_BEGIN(ctx, "PassValueWithSwizzle")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(PassValueWithSwizzle)(THIS_ _In_", "struct ID3D11LinkingNode *", "pSrcNode")
PARAM(ctx, "                                          _In_", "INT", "SrcParameterIndex")
PARAM(ctx, "                                          _In_", "LPCSTR", "pSrcSwizzle")
PARAM(ctx, "                                          _In_", "struct ID3D11LinkingNode *", "pDstNode")
PARAM(ctx, "                                          _In_", "INT", "DstParameterIndex")
PARAM(ctx, "                                          _In_", "LPCSTR", "pDstSwizzle")
FUNC_END(ctx, "PassValueWithSwizzle")
FUNC_BEGIN(ctx, "GetLastError")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetLastError)(THIS_ _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorBuffer")
FUNC_END(ctx, "GetLastError")
FUNC_BEGIN(ctx, "GenerateHlsl")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GenerateHlsl)(THIS_ _In_", "UINT", "uFlags")
PARAM(ctx, "                                  _COM_Outptr_", "ID3DBlob **", "ppBuffer")
FUNC_END(ctx, "GenerateHlsl")
CLASS_END(ctx, "ID3D11FunctionLinkingGraph")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12ShaderReflectionType")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_SHADER_TYPE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetMemberTypeByIndex")
RETURN_TYPE(ctx, "struct ID3D12ShaderReflectionType *")
PARAM(ctx, " GetMemberTypeByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetMemberTypeByIndex")
FUNC_BEGIN(ctx, "GetMemberTypeByName")
RETURN_TYPE(ctx, "struct ID3D12ShaderReflectionType *")
PARAM(ctx, " GetMemberTypeByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetMemberTypeByName")
FUNC_BEGIN(ctx, "GetMemberTypeName")
RETURN_TYPE(ctx, "LPCSTR")
PARAM(ctx, " GetMemberTypeName)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetMemberTypeName")
FUNC_BEGIN(ctx, "IsEqual")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(IsEqual)(THIS_ _In_", "struct ID3D12ShaderReflectionType *", "pType")
FUNC_END(ctx, "IsEqual")
FUNC_BEGIN(ctx, "GetSubType")
RETURN_TYPE(ctx, "struct ID3D12ShaderReflectionType *")
FUNC_END(ctx, "GetSubType")
FUNC_BEGIN(ctx, "GetBaseClass")
RETURN_TYPE(ctx, "struct ID3D12ShaderReflectionType *")
FUNC_END(ctx, "GetBaseClass")
FUNC_BEGIN(ctx, "GetNumInterfaces")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetNumInterfaces")
FUNC_BEGIN(ctx, "GetInterfaceByIndex")
RETURN_TYPE(ctx, "struct ID3D12ShaderReflectionType *")
PARAM(ctx, " GetInterfaceByIndex)(THIS_ _In_", "UINT", "uIndex")
FUNC_END(ctx, "GetInterfaceByIndex")
FUNC_BEGIN(ctx, "IsOfType")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(IsOfType)(THIS_ _In_", "struct ID3D12ShaderReflectionType *", "pType")
FUNC_END(ctx, "IsOfType")
FUNC_BEGIN(ctx, "ImplementsInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(ImplementsInterface)(THIS_ _In_", "struct ID3D12ShaderReflectionType *", "pBase")
FUNC_END(ctx, "ImplementsInterface")
CLASS_END(ctx, "ID3D12ShaderReflectionType")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12ShaderReflectionVariable")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_SHADER_VARIABLE_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetType")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionType *")
FUNC_END(ctx, "GetType")
FUNC_BEGIN(ctx, "GetBuffer")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionConstantBuffer *")
FUNC_END(ctx, "GetBuffer")
FUNC_BEGIN(ctx, "GetInterfaceSlot")
RETURN_TYPE(ctx, "UINT")
PARAM(ctx, " GetInterfaceSlot)(THIS_ _In_", "UINT", "uArrayIndex")
FUNC_END(ctx, "GetInterfaceSlot")
CLASS_END(ctx, "ID3D12ShaderReflectionVariable")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12ShaderReflectionConstantBuffer")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_", "D3D12_SHADER_BUFFER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetVariableByIndex")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetVariableByIndex")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
CLASS_END(ctx, "ID3D12ShaderReflectionConstantBuffer")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12ShaderReflection")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, "                              _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_SHADER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetConstantBufferByIndex")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByIndex)(THIS_ _In_", "UINT", "Index")
FUNC_END(ctx, "GetConstantBufferByIndex")
FUNC_BEGIN(ctx, "GetConstantBufferByName")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetConstantBufferByName")
FUNC_BEGIN(ctx, "GetResourceBindingDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDesc)(THIS_ _In_", "UINT", "ResourceIndex")
PARAM(ctx, "                                      _Out_", "D3D12_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDesc")
FUNC_BEGIN(ctx, "GetInputParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetInputParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                     _Out_", "D3D12_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetInputParameterDesc")
FUNC_BEGIN(ctx, "GetOutputParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetOutputParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                      _Out_", "D3D12_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetOutputParameterDesc")
FUNC_BEGIN(ctx, "GetPatchConstantParameterDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetPatchConstantParameterDesc)(THIS_ _In_", "UINT", "ParameterIndex")
PARAM(ctx, "                                             _Out_", "D3D12_SIGNATURE_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetPatchConstantParameterDesc")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
FUNC_BEGIN(ctx, "GetResourceBindingDescByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDescByName)(THIS_ _In_", "LPCSTR", "Name")
PARAM(ctx, "                                            _Out_", "D3D12_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDescByName")
FUNC_BEGIN(ctx, "GetMovInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetMovInstructionCount")
FUNC_BEGIN(ctx, "GetMovcInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetMovcInstructionCount")
FUNC_BEGIN(ctx, "GetConversionInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetConversionInstructionCount")
FUNC_BEGIN(ctx, "GetBitwiseInstructionCount")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetBitwiseInstructionCount")
FUNC_BEGIN(ctx, "GetGSInputPrimitive")
RETURN_TYPE(ctx, "D3D_PRIMITIVE")
FUNC_END(ctx, "GetGSInputPrimitive")
FUNC_BEGIN(ctx, "IsSampleFrequencyShader")
RETURN_TYPE(ctx, "BOOL")
FUNC_END(ctx, "IsSampleFrequencyShader")
FUNC_BEGIN(ctx, "GetNumInterfaceSlots")
RETURN_TYPE(ctx, "UINT")
FUNC_END(ctx, "GetNumInterfaceSlots")
FUNC_BEGIN(ctx, "GetMinFeatureLevel")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetMinFeatureLevel)(THIS_ _Out_", "enum D3D_FEATURE_LEVEL *", "pLevel")
FUNC_END(ctx, "GetMinFeatureLevel")
FUNC_BEGIN(ctx, "GetThreadGroupSize")
RETURN_TYPE(ctx, "UINT")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeX")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeY")
PARAM(ctx, "                                         _Out_opt_", "UINT *", "pSizeZ")
FUNC_END(ctx, "GetThreadGroupSize")
FUNC_BEGIN(ctx, "GetRequiresFlags")
RETURN_TYPE(ctx, "UINT64")
FUNC_END(ctx, "GetRequiresFlags")
CLASS_END(ctx, "ID3D12ShaderReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12LibraryReflection")
INHERITS(ctx, "IUnknown")
FUNC_BEGIN(ctx, "QueryInterface")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(QueryInterface)(THIS_ _In_", "const IID &", "iid")
PARAM(ctx, " _Out_", "LPVOID *", "ppv")
FUNC_END(ctx, "QueryInterface")
FUNC_BEGIN(ctx, "AddRef")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "AddRef")
FUNC_BEGIN(ctx, "Release")
RETURN_TYPE(ctx, "ULONG")
FUNC_END(ctx, "Release")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_LIBRARY_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetFunctionByIndex")
RETURN_TYPE(ctx, "ID3D12FunctionReflection *")
PARAM(ctx, " GetFunctionByIndex)(THIS_ _In_", "INT", "FunctionIndex")
FUNC_END(ctx, "GetFunctionByIndex")
CLASS_END(ctx, "ID3D12LibraryReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12FunctionReflection")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_FUNCTION_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
FUNC_BEGIN(ctx, "GetConstantBufferByIndex")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByIndex)(THIS_ _In_", "UINT", "BufferIndex")
FUNC_END(ctx, "GetConstantBufferByIndex")
FUNC_BEGIN(ctx, "GetConstantBufferByName")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionConstantBuffer *")
PARAM(ctx, " GetConstantBufferByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetConstantBufferByName")
FUNC_BEGIN(ctx, "GetResourceBindingDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDesc)(THIS_ _In_", "UINT", "ResourceIndex")
PARAM(ctx, "                                      _Out_", "D3D12_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDesc")
FUNC_BEGIN(ctx, "GetVariableByName")
RETURN_TYPE(ctx, "ID3D12ShaderReflectionVariable *")
PARAM(ctx, " GetVariableByName)(THIS_ _In_", "LPCSTR", "Name")
FUNC_END(ctx, "GetVariableByName")
FUNC_BEGIN(ctx, "GetResourceBindingDescByName")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetResourceBindingDescByName)(THIS_ _In_", "LPCSTR", "Name")
PARAM(ctx, "                                            _Out_", "D3D12_SHADER_INPUT_BIND_DESC *", "pDesc")
FUNC_END(ctx, "GetResourceBindingDescByName")
FUNC_BEGIN(ctx, "GetFunctionParameter")
RETURN_TYPE(ctx, "ID3D12FunctionParameterReflection *")
PARAM(ctx, " GetFunctionParameter)(THIS_ _In_", "INT", "ParameterIndex")
FUNC_END(ctx, "GetFunctionParameter")
CLASS_END(ctx, "ID3D12FunctionReflection")
####################################################
#################### CLASS #########################
####################################################
CLASS_BEGIN(ctx, "ID3D12FunctionParameterReflection")
FUNC_BEGIN(ctx, "GetDesc")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "    STDMETHOD(GetDesc)(THIS_ _Out_", "D3D12_PARAMETER_DESC *", "pDesc")
FUNC_END(ctx, "GetDesc")
CLASS_END(ctx, "ID3D12FunctionParameterReflection")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DReadFileToBlob")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DReadFileToBlob(_In_", "LPCWSTR", "pFileName")
PARAM(ctx, "                  _Out_", "ID3DBlob **", "ppContents")
FUNC_END(ctx, "D3DReadFileToBlob")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DWriteBlobToFile")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DWriteBlobToFile(_In_", "ID3DBlob *", "pBlob")
PARAM(ctx, "                   _In_", "LPCWSTR", "pFileName")
PARAM(ctx, "                   _In_", "BOOL", "bOverwrite")
FUNC_END(ctx, "D3DWriteBlobToFile")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCompile")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCompile(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "           _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "           _In_opt_", "LPCSTR", "pSourceName")
PARAM(ctx, "           _In_reads_opt_(_Inexpressible_(pDefines->Name != NULL))", "const D3D_SHADER_MACRO *", "pDefines")
PARAM(ctx, "           _In_opt_", "ID3DInclude *", "pInclude")
PARAM(ctx, "           _In_opt_", "LPCSTR", "pEntrypoint")
PARAM(ctx, "           _In_", "LPCSTR", "pTarget")
PARAM(ctx, "           _In_", "UINT", "Flags1")
PARAM(ctx, "           _In_", "UINT", "Flags2")
PARAM(ctx, "           _Out_", "ID3DBlob **", "ppCode")
PARAM(ctx, "           _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorMsgs")
FUNC_END(ctx, "D3DCompile")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCompile2")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCompile2(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "            _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "            _In_opt_", "LPCSTR", "pSourceName")
PARAM(ctx, "            _In_reads_opt_(_Inexpressible_(pDefines->Name != NULL))", "const D3D_SHADER_MACRO *", "pDefines")
PARAM(ctx, "            _In_opt_", "ID3DInclude *", "pInclude")
PARAM(ctx, "            _In_", "LPCSTR", "pEntrypoint")
PARAM(ctx, "            _In_", "LPCSTR", "pTarget")
PARAM(ctx, "            _In_", "UINT", "Flags1")
PARAM(ctx, "            _In_", "UINT", "Flags2")
PARAM(ctx, "            _In_", "UINT", "SecondaryDataFlags")
PARAM(ctx, "            _In_reads_bytes_opt_(SecondaryDataSize)", "LPCVOID", "pSecondaryData")
PARAM(ctx, "            _In_", "SIZE_T", "SecondaryDataSize")
PARAM(ctx, "            _Out_", "ID3DBlob **", "ppCode")
PARAM(ctx, "            _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorMsgs")
FUNC_END(ctx, "D3DCompile2")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCompileFromFile")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCompileFromFile(_In_", "LPCWSTR", "pFileName")
PARAM(ctx, "                   _In_reads_opt_(_Inexpressible_(pDefines->Name != NULL))", "const D3D_SHADER_MACRO *", "pDefines")
PARAM(ctx, "                   _In_opt_", "ID3DInclude *", "pInclude")
PARAM(ctx, "                   _In_", "LPCSTR", "pEntrypoint")
PARAM(ctx, "                   _In_", "LPCSTR", "pTarget")
PARAM(ctx, "                   _In_", "UINT", "Flags1")
PARAM(ctx, "                   _In_", "UINT", "Flags2")
PARAM(ctx, "                   _Out_", "ID3DBlob **", "ppCode")
PARAM(ctx, "                   _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorMsgs")
FUNC_END(ctx, "D3DCompileFromFile")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DPreprocess")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DPreprocess(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "              _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "              _In_opt_", "LPCSTR", "pSourceName")
PARAM(ctx, "              _In_opt_", "const D3D_SHADER_MACRO *", "pDefines")
PARAM(ctx, "              _In_opt_", "ID3DInclude *", "pInclude")
PARAM(ctx, "              _Out_", "ID3DBlob **", "ppCodeText")
PARAM(ctx, "              _Always_(_Outptr_opt_result_maybenull_)", "ID3DBlob **", "ppErrorMsgs")
FUNC_END(ctx, "D3DPreprocess")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetDebugInfo")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetDebugInfo(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                _Out_", "ID3DBlob **", "ppDebugInfo")
FUNC_END(ctx, "D3DGetDebugInfo")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DReflect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DReflect(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "           _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "           _In_", "const IID &", "pInterface")
PARAM(ctx, "           _Out_", "void **", "ppReflector")
FUNC_END(ctx, "D3DReflect")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DReflectLibrary")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DReflectLibrary(__in_bcount(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                  __in", "SIZE_T", "SrcDataSize")
PARAM(ctx, "	              __in", "const IID &", "riid")
PARAM(ctx, "                  __out", "LPVOID *", "ppReflector")
FUNC_END(ctx, "D3DReflectLibrary")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DDisassemble")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DDisassemble(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "               _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "               _In_", "UINT", "Flags")
PARAM(ctx, "               _In_opt_", "LPCSTR", "szComments")
PARAM(ctx, "               _Out_", "ID3DBlob **", "ppDisassembly")
FUNC_END(ctx, "D3DDisassemble")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DDisassembleRegion")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DDisassembleRegion(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                     _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                     _In_", "UINT", "Flags")
PARAM(ctx, "                     _In_opt_", "LPCSTR", "szComments")
PARAM(ctx, "                     _In_", "SIZE_T", "StartByteOffset")
PARAM(ctx, "                     _In_", "SIZE_T", "NumInsts")
PARAM(ctx, "                     _Out_opt_", "SIZE_T *", "pFinishByteOffset")
PARAM(ctx, "                     _Out_", "ID3DBlob **", "ppDisassembly")
FUNC_END(ctx, "D3DDisassembleRegion")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCreateLinker")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCreateLinker(__out", "struct ID3D11Linker **", "ppLinker")
FUNC_END(ctx, "D3DCreateLinker")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DLoadModule")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DLoadModule(_In_", "LPCVOID", "pSrcData")
PARAM(ctx, "              _In_", "SIZE_T", "cbSrcDataSize")
PARAM(ctx, "              _Out_", "struct ID3D11Module **", "ppModule")
FUNC_END(ctx, "D3DLoadModule")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCreateFunctionLinkingGraph")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCreateFunctionLinkingGraph(_In_", "UINT", "uFlags")
PARAM(ctx, "                              _Out_", "struct ID3D11FunctionLinkingGraph **", "ppFunctionLinkingGraph")
FUNC_END(ctx, "D3DCreateFunctionLinkingGraph")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetTraceInstructionOffsets")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetTraceInstructionOffsets(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                              _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                              _In_", "UINT", "Flags")
PARAM(ctx, "                              _In_", "SIZE_T", "StartInstIndex")
PARAM(ctx, "                              _In_", "SIZE_T", "NumInsts")
PARAM(ctx, " *pTotalInsts))", "SIZE_T *", "pOffsets")
PARAM(ctx, "                              _Out_opt_", "SIZE_T *", "pTotalInsts")
FUNC_END(ctx, "D3DGetTraceInstructionOffsets")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetInputSignatureBlob")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetInputSignatureBlob(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                         _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                         _Out_", "ID3DBlob **", "ppSignatureBlob")
FUNC_END(ctx, "D3DGetInputSignatureBlob")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetOutputSignatureBlob")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetOutputSignatureBlob(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                          _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                          _Out_", "ID3DBlob **", "ppSignatureBlob")
FUNC_END(ctx, "D3DGetOutputSignatureBlob")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetInputAndOutputSignatureBlob")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetInputAndOutputSignatureBlob(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                                  _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                                  _Out_", "ID3DBlob **", "ppSignatureBlob")
FUNC_END(ctx, "D3DGetInputAndOutputSignatureBlob")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DStripShader")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DStripShader(_In_reads_bytes_(BytecodeLength)", "LPCVOID", "pShaderBytecode")
PARAM(ctx, "               _In_", "SIZE_T", "BytecodeLength")
PARAM(ctx, "               _In_", "UINT", "uStripFlags")
PARAM(ctx, "               _Out_", "ID3DBlob **", "ppStrippedBlob")
FUNC_END(ctx, "D3DStripShader")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DGetBlobPart")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DGetBlobPart(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "               _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "               _In_", "D3D_BLOB_PART", "Part")
PARAM(ctx, "               _In_", "UINT", "Flags")
PARAM(ctx, "               _Out_", "ID3DBlob **", "ppPart")
FUNC_END(ctx, "D3DGetBlobPart")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DSetBlobPart")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DSetBlobPart(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "               _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "               _In_", "D3D_BLOB_PART", "Part")
PARAM(ctx, "               _In_", "UINT", "Flags")
PARAM(ctx, "               _In_reads_bytes_(PartSize)", "LPCVOID", "pPart")
PARAM(ctx, "               _In_", "SIZE_T", "PartSize")
PARAM(ctx, "               _Out_", "ID3DBlob **", "ppNewShader")
FUNC_END(ctx, "D3DSetBlobPart")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCreateBlob")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCreateBlob(_In_", "SIZE_T", "Size")
PARAM(ctx, "              _Out_", "ID3DBlob **", "ppBlob")
FUNC_END(ctx, "D3DCreateBlob")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DCompressShaders")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DCompressShaders(_In_", "UINT", "uNumShaders")
PARAM(ctx, "                   _In_reads_(uNumShaders)", "D3D_SHADER_DATA *", "pShaderData")
PARAM(ctx, "                   _In_", "UINT", "uFlags")
PARAM(ctx, "                   _Out_", "ID3DBlob **", "ppCompressedData")
FUNC_END(ctx, "D3DCompressShaders")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DDecompressShaders")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DDecompressShaders(_In_reads_bytes_(SrcDataSize)", "LPCVOID", "pSrcData")
PARAM(ctx, "                     _In_", "SIZE_T", "SrcDataSize")
PARAM(ctx, "                     _In_", "UINT", "uNumShaders")
PARAM(ctx, "                     _In_", "UINT", "uStartIndex")
PARAM(ctx, "                     _In_reads_opt_(uNumShaders)", "UINT *", "pIndices")
PARAM(ctx, "                     _In_", "UINT", "uFlags")
PARAM(ctx, "                     _Out_writes_(uNumShaders)", "ID3DBlob **", "ppShaders")
PARAM(ctx, "                     _Out_opt_", "UINT *", "pTotalShaders")
FUNC_END(ctx, "D3DDecompressShaders")
####################################################
############### GLOBAL FUNCTION ####################
####################################################
FUNC_BEGIN(ctx, "D3DDisassemble10Effect")
RETURN_TYPE(ctx, "HRESULT")
PARAM(ctx, "D3DDisassemble10Effect(_In_", "struct ID3D10Effect *", "pEffect")
PARAM(ctx, "                       _In_", "UINT", "Flags")
PARAM(ctx, "                       _Out_", "ID3DBlob **", "ppDisassembly")
FUNC_END(ctx, "D3DDisassemble10Effect")
genWrappers(ctx)
